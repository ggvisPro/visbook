{
  "hash": "9540010cc309a3c264973fe7b02cdd37",
  "result": {
    "engine": "knitr",
    "markdown": "# Pie {#sec-pie}\n\n饼图在科研数据可视化领域非常不受待见的图形, 但在商业领域仍然有其应用场景.\n\n谨慎使用饼图，或者，使用 [条形图](@sec-bar)、[棒棒糖图](@sec-lollipop)、[树状图](@sec-treemap) 等替代方案。\n\n## PKG\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(RColorBrewer) # 用于调色板\n```\n:::\n\n\n## [饼图的问题](https://www.data-to-viz.com/caveat/pie.html)\n\n### Bad by definition\n\n饼图是一个被分成扇区的圆，每个扇区代表整体的一部分。它通常用于显示百分比，其中所有扇区的总和等于 100%。\n\n可读性太差了!，尤其是当扇区的大小相似时。人们很难准确地比较不同扇区的大小。\n\n![饼图,你能找出组间趋势吗?](./image/bad-pie.png)\n\n同样的数据用条形图表示就清晰多了:\n\n![柱状图看起来比饼图清晰多了](./image/better-bar.png)\n\n### Even worse\n\n饼图还有一些讨厌的问题:\n\n- 3D 版饼图\n- 总和不为 100%\n- 项目太多\n- 爆炸/分散式饼图(exploded pie charts)\n\n### Alternatives \n\n最好的替代是条形图,如果数据很多,可以使用棒棒糖图,会更优雅一点. \n\n基于世界上几个国家 [武器销售](https://www.data-to-viz.com/story/OneNumOneCat.html) 数量的例子：\n\n![世界上部分国家武器销售数量,美国遥遥领先](./image/alt-bar.png)\n\n为了描述**整体的组成**,还可以使用树状图, 例如:\n\n![树状图,武器销售占比](./image/alt-bar2.png)\n\n## `pie()`\n\n`Base R::pie()` 函数用于绘制饼图.\n\n### 基础\n\n\n::: {.cell}\n\n```{.r .cell-code}\nProp <- c(3,7,9,1,2)\npie(Prop)\n```\n\n::: {.cell-output-display}\n![基础饼图](pie_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n### `labels`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npie(Prop , labels = c(\"Gr-A\",\"Gr-B\",\"Gr-C\",\"Gr-D\",\"Gr-E\"))\n```\n\n::: {.cell-output-display}\n![带标签的饼图](pie_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### Non-circular\n\n可以通过 `edges` 参数(多边形的边数)来绘制非圆形的饼图, 例如:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npie(Prop, labels = c(\"Gr-A\", \"Gr-B\", \"Gr-C\", \"Gr-D\", \"Gr-E\"), edges = 50)\n```\n\n::: {.cell-output-display}\n![非圆形饼图](pie_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### Shadow\n\n\n::: {.cell}\n\n```{.r .cell-code}\npie(\n  Prop,\n  labels = c(\"Gr-A\", \"Gr-B\", \"Gr-C\", \"Gr-D\", \"Gr-E\"),\n  density = 10, # 设置阴影密度\n  angle = c(20, 90, 30, 10, 0) # 设置每个扇区的阴影角度\n)\n```\n\n::: {.cell-output-display}\n![带阴影的饼图](pie_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### 颜色\n\n使用 col 更改组颜色，使用 border 更改边框颜色。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# library(RColorBrewer) # 用于调色板\n\nmyPalette <- brewer.pal(5, \"Set2\")\n\npie(\n  Prop,\n  labels = c(\"Gr-A\", \"Gr-B\", \"Gr-C\", \"Gr-D\", \"Gr-E\"),\n  border = \"white\", # 设置边框颜色为白色\n  col = myPalette # 使用调色板\n)\n```\n\n::: {.cell-output-display}\n![定制饼图颜色](pie_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## `geom_bar()`\n\n由于饼图不受待见, `ggplot2` 没有提供专门的饼图函数, 但可以使用 `geom_bar()` 绘制饼图. 核心技术:\n\n- 输入数据框有 2 列：group 和 value\n- `geom_bar()` 函数创建一个仅包含一个条形的堆叠条形图\n- `coord_polar()` 使其呈圆形\n\n### 基础\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 创建数据框\ndata <- data.frame(\n  group = LETTERS[1:5],\n  value = c(13, 7, 9, 21, 2)\n)\n# 绘制饼图\nggplot(data, aes(x = \"\", y = value, fill = group)) +\n  geom_bar(stat = \"identity\", width = 1) + # identity 创建堆叠条形图\n  coord_polar(\"y\", start = 0) +  # 将条形图转换为极坐标系\n  scale_fill_brewer(palette = 2) # 设置配色方案\n```\n\n::: {.cell-output-display}\n![基础饼图](pie_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### 去坐标轴\n\n上面的图看起来不太对,不像饼图, 继续移除 x 轴和 y 轴的标签,和背景: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 移除x 轴和 y 轴的标签和背景\nggplot(data, aes(x = \"\", y = value, fill = group)) +\n  geom_bar(stat = \"identity\", width = 1) + # identity 创建堆叠条形图\n  coord_polar(\"y\", start = 0) + # 将条形图转换为极坐标系\n  scale_fill_brewer(palette = 2) + # 设置配色方案\n  theme_void() # 移除背景和坐标轴\n```\n\n::: {.cell-output-display}\n![改进后的饼图](pie_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n### 标签\n\n因为使用了 `coord_polar()`，所以计算文本标签的位置比较复杂.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. 按 group 降序排列，计算每组所占百分比和标签位置\ndata <- data |> \n    arrange(desc(group)) |> # 按 group 降序排列\n    mutate(\n        prop = value / sum(data$value) * 100, # 计算百分比\n        ypos = cumsum(prop) - 0.5 * prop      # 计算标签位置\n    )\n\n# 2. 绘制饼图\nggplot(data, aes(x = \"\", y = prop, fill = group)) +\n    geom_bar(stat = \"identity\", width = 1, color = \"white\") + # 绘制堆叠条形图\n    coord_polar(\"y\", start = 0) +                             # 转换为极坐标系（饼图）\n    geom_text(\n        aes(y = ypos, label = group),                           # 添加标签\n        color = \"white\", size = 6\n    ) +\n    scale_fill_brewer(palette = 2) +                      # 设置配色方案\n    theme_void() +                                            # 移除背景和坐标轴\n    theme(legend.position = \"none\")                          # 移除图例\n```\n\n::: {.cell-output-display}\n![带标签和自定义配色的饼图](pie_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n**大功告成!**\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}