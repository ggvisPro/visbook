{
  "hash": "7f050dabd96d4d7ecf765e9f03e6c5f2",
  "result": {
    "engine": "knitr",
    "markdown": "# Sankey {#sec-sankey}  \n\n## PKG\n\n## Sankey\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 加载必要的库\nlibrary(tidyverse)    # 数据处理核心包\nlibrary(viridis)      # 颜色方案\nlibrary(patchwork)    # 图形拼接\nlibrary(hrbrthemes)   # 图形主题\nlibrary(circlize)     # 圆形图形\nlibrary(networkD3)    # 网络图和桑基图\n\n# 从GitHub加载数据集\ndata <- read.table(\n  \"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/13_AdjacencyDirectedWeighted.csv\",\n  header = TRUE\n)\n\n# 转换为长格式数据\ndata_long <- data |>\n  rownames_to_column() |>                           # 行名转为列\n  gather(key = \"key\", value = \"value\", -rowname) |> # 宽转长\n  filter(value > 0)                                 # 过滤正值\n\n# 重命名列\ncolnames(data_long) <- c(\"source\", \"target\", \"value\")\ndata_long$target <- paste(data_long$target, \" \", sep = \"\") # 目标节点加空格区分\n\n# 创建节点数据框：列出流程中涉及的所有实体\nnodes <- data.frame(\n  name = c(as.character(data_long$source), as.character(data_long$target)) |>\n    unique()\n)\n\n# networkD3需要使用ID而非名称，重新格式化连接数据\ndata_long$IDsource <- match(data_long$source, nodes$name) - 1 # 源节点ID\ndata_long$IDtarget <- match(data_long$target, nodes$name) - 1 # 目标节点ID\n\n# 准备颜色比例尺\nColourScal <- 'd3.scaleOrdinal() .range([\"#FDE725FF\",\"#B4DE2CFF\",\"#6DCD59FF\",\"#35B779FF\",\"#1F9E89FF\",\"#26828EFF\",\"#31688EFF\",\"#3E4A89FF\",\"#482878FF\",\"#440154FF\"])'\n\n# 创建桑基图\nsankeyNetwork(\n  Links = data_long,      # 连接数据\n  Nodes = nodes,          # 节点数据\n  Source = \"IDsource\",    # 源节点列名\n  Target = \"IDtarget\",    # 目标节点列名\n  Value = \"value\",        # 流量值列名\n  NodeID = \"name\",        # 节点名称列名\n  sinksRight = FALSE,     # 终点不强制右对齐\n  colourScale = ColourScal, # 颜色方案\n  nodeWidth = 40,         # 节点宽度\n  fontSize = 13,          # 字体大小\n  nodePadding = 20        # 节点间距\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"sankeyNetwork html-widget html-fill-item\" id=\"htmlwidget-bb86ac4150cdb19d5bff\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-bb86ac4150cdb19d5bff\">{\"x\":{\"links\":{\"source\":[0,1,2,3,0,1,4,5,6,7,2,3,8,9,5,6,0,1,5,2,3,9,0,1,7,2,3,2,1,3,8,0,1,2,9],\"target\":[10,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,14,14,14,14,14,14,15,15,15,15,15,16,17,17,18,19,19,19,19],\"value\":[3.142471,1.630997,0.525881,0.145264,2.107883,0.601265,2.401476,1.762587,1.215929,0.17037,1.390272,0.468762,0.60923,0.449623,0.879198,0.276908,0.540887,0.97306,3.627847,1.508008,1.057904,0.169274,0.155988,0.333608,0.190706,0.34742,0.278746,1.307907,0.380388,0.781316,1.870501,0.673004,0.8693109999999999,4.902081,0.927243]},\"nodes\":{\"name\":[\"Africa\",\"East Asia\",\"South Asia\",\"South East Asia\",\"Europe\",\"Latin America\",\"North America\",\"Oceania\",\"Soviet Union\",\"West Asia\",\"Africa \",\"East.Asia \",\"Europe \",\"Latin.America \",\"North.America \",\"Oceania \",\"South.Asia \",\"South.East.Asia \",\"Soviet.Union \",\"West.Asia \"],\"group\":[\"Africa\",\"East Asia\",\"South Asia\",\"South East Asia\",\"Europe\",\"Latin America\",\"North America\",\"Oceania\",\"Soviet Union\",\"West Asia\",\"Africa \",\"East.Asia \",\"Europe \",\"Latin.America \",\"North.America \",\"Oceania \",\"South.Asia \",\"South.East.Asia \",\"Soviet.Union \",\"West.Asia \"]},\"options\":{\"NodeID\":\"name\",\"NodeGroup\":\"name\",\"LinkGroup\":null,\"colourScale\":\"d3.scaleOrdinal() .range([\\\"#FDE725FF\\\",\\\"#B4DE2CFF\\\",\\\"#6DCD59FF\\\",\\\"#35B779FF\\\",\\\"#1F9E89FF\\\",\\\"#26828EFF\\\",\\\"#31688EFF\\\",\\\"#3E4A89FF\\\",\\\"#482878FF\\\",\\\"#440154FF\\\"])\",\"fontSize\":13,\"fontFamily\":null,\"nodeWidth\":40,\"nodePadding\":20,\"units\":\"\",\"margin\":{\"top\":null,\"right\":null,\"bottom\":null,\"left\":null},\"iterations\":32,\"sinksRight\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\n基于迁移数据的桑基图：展示不同国家间人口流动情况\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 加载网络图包\nlibrary(networkD3)\n\n# 加载能源投影数据\nURL <- \"https://cdn.rawgit.com/christophergandrud/networkD3/master/JSONdata/energy.json\"\nEnergy <- jsonlite::fromJSON(URL) # 解析JSON数据\n\n# 现在我们有两个数据框：\n# - links数据框：包含3列(from, to, value)\n# - nodes数据框：给出每个节点的名称\n\n# 绘制桑基图\nsankeyNetwork(\n  Links = Energy$links,  # 连接数据\n  Nodes = Energy$nodes,  # 节点数据\n  Source = \"source\",     # 源节点列名\n  Target = \"target\",     # 目标节点列名\n  Value = \"value\",       # 流量值列名\n  NodeID = \"name\",       # 节点名称列名\n  units = \"TWh\",         # 单位标签\n  fontSize = 12,         # 字体大小\n  nodeWidth = 30         # 节点宽度\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"sankeyNetwork html-widget html-fill-item\" id=\"htmlwidget-6292b46332bcae3627c7\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-6292b46332bcae3627c7\">{\"x\":{\"links\":{\"source\":[0,1,1,1,1,6,7,8,10,9,11,11,11,15,15,15,15,15,15,15,15,15,15,15,23,25,5,5,5,5,5,27,17,17,28,29,2,2,2,2,2,2,2,2,34,24,35,36,38,37,39,39,40,40,41,42,43,43,4,4,4,26,26,26,44,45,46,47],\"target\":[1,2,3,4,5,2,4,9,9,4,12,13,14,16,14,17,12,18,19,13,3,20,21,22,24,24,13,3,26,19,12,15,28,3,18,15,12,30,18,31,32,19,33,20,1,5,26,37,37,2,4,1,14,13,15,14,42,41,19,26,12,15,3,11,15,1,15,15],\"value\":[124.729,0.597,26.862,280.322,81.14400000000001,35,35,11.606,63.965,75.571,10.639,22.505,46.184,104.453,113.726,27.14,342.165,37.797,4.412,40.858,56.691,7.863,90.008,93.494,40.719,82.233,0.129,1.401,151.891,2.096,48.58,7.013,20.897,6.242,20.897,6.995,121.066,128.69,135.835,14.458,206.267,3.64,33.218,4.413,4.375,122.952,839.978,504.287,107.703,611.99,56.587,77.81,193.026,70.672,59.901,19.263,19.263,59.901,0.882,400.12,46.477,525.5309999999999,787.129,79.32899999999999,9.452,182.01,19.013,289.366]},\"nodes\":{\"name\":[\"Agricultural 'waste'\",\"Bio-conversion\",\"Liquid\",\"Losses\",\"Solid\",\"Gas\",\"Biofuel imports\",\"Biomass imports\",\"Coal imports\",\"Coal\",\"Coal reserves\",\"District heating\",\"Industry\",\"Heating and cooling - commercial\",\"Heating and cooling - homes\",\"Electricity grid\",\"Over generation / exports\",\"H2 conversion\",\"Road transport\",\"Agriculture\",\"Rail transport\",\"Lighting & appliances - commercial\",\"Lighting & appliances - homes\",\"Gas imports\",\"Ngas\",\"Gas reserves\",\"Thermal generation\",\"Geothermal\",\"H2\",\"Hydro\",\"International shipping\",\"Domestic aviation\",\"International aviation\",\"National navigation\",\"Marine algae\",\"Nuclear\",\"Oil imports\",\"Oil\",\"Oil reserves\",\"Other waste\",\"Pumped heat\",\"Solar PV\",\"Solar Thermal\",\"Solar\",\"Tidal\",\"UK land based bioenergy\",\"Wave\",\"Wind\"],\"group\":[\"Agricultural 'waste'\",\"Bio-conversion\",\"Liquid\",\"Losses\",\"Solid\",\"Gas\",\"Biofuel imports\",\"Biomass imports\",\"Coal imports\",\"Coal\",\"Coal reserves\",\"District heating\",\"Industry\",\"Heating and cooling - commercial\",\"Heating and cooling - homes\",\"Electricity grid\",\"Over generation / exports\",\"H2 conversion\",\"Road transport\",\"Agriculture\",\"Rail transport\",\"Lighting & appliances - commercial\",\"Lighting & appliances - homes\",\"Gas imports\",\"Ngas\",\"Gas reserves\",\"Thermal generation\",\"Geothermal\",\"H2\",\"Hydro\",\"International shipping\",\"Domestic aviation\",\"International aviation\",\"National navigation\",\"Marine algae\",\"Nuclear\",\"Oil imports\",\"Oil\",\"Oil reserves\",\"Other waste\",\"Pumped heat\",\"Solar PV\",\"Solar Thermal\",\"Solar\",\"Tidal\",\"UK land based bioenergy\",\"Wave\",\"Wind\"]},\"options\":{\"NodeID\":\"name\",\"NodeGroup\":\"name\",\"LinkGroup\":null,\"colourScale\":\"d3.scaleOrdinal(d3.schemeCategory20);\",\"fontSize\":12,\"fontFamily\":null,\"nodeWidth\":30,\"nodePadding\":10,\"units\":\"TWh\",\"margin\":{\"top\":null,\"right\":null,\"bottom\":null,\"left\":null},\"iterations\":32,\"sinksRight\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\n能源流向桑基图：展示能源从来源到终端的完整流向\n:::\n:::\n\n\n\n## step\n\n\n### 基本\n\n从连接数据框 (Connection Data Frame) 创建桑基图: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 加载所需的 R 包\nlibrary(networkD3) # 用于创建 D3 网络图\nlibrary(dplyr)     # 用于数据处理\n\n# 创建一个连接数据框 (links data frame)\n# 这是一个表示流量信息的列表, 每一行代表一个从 source 到 target 的流量, 大小为 value\nlinks <- data.frame(\n  source = c(\"group_A\", \"group_A\", \"group_B\", \"group_C\", \"group_C\", \"group_E\"),\n  target = c(\"group_C\", \"group_D\", \"group_E\", \"group_F\", \"group_G\", \"group_H\"),\n  value = c(2, 3, 2, 3, 1, 3)\n)\n\n# 从连接数据中, 我们需要创建一个节点数据框 (nodes data frame)\n# 它列出了所有参与流动的实体 (节点)\nnodes <- data.frame(\n  name = c(\n    as.character(links$source),\n    as.character(links$target)\n  ) |>\n    unique() # 获取所有唯一的节点名称\n)\n\n# networkD3 需要使用从 0 开始的数字 ID 来表示连接, 而不是用节点名称\n# 因此, 我们需要将 links 数据框中的名称转换为对应的 ID\nlinks$IDsource <- match(links$source, nodes$name) - 1\nlinks$IDtarget <- match(links$target, nodes$name) - 1\n\n# 使用 sankeyNetwork 函数创建桑基图\np <- sankeyNetwork(\n  Links = links,          # 连接数据框\n  Nodes = nodes,          # 节点数据框\n  Source = \"IDsource\",    # 连接源的 ID列\n  Target = \"IDtarget\",    # 连接目标的 ID列\n  Value = \"value\",        # 流量值的列\n  NodeID = \"name\",        # 节点名称的列\n  sinksRight = FALSE      # 如果为 TRUE, 没有出向连接的节点会靠右对齐\n)\n\n# 显示图表\np\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"sankeyNetwork html-widget html-fill-item\" id=\"htmlwidget-8ba4d5fb93bbe6037557\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8ba4d5fb93bbe6037557\">{\"x\":{\"links\":{\"source\":[0,0,1,2,2,3],\"target\":[2,4,3,5,6,7],\"value\":[2,3,2,3,1,3]},\"nodes\":{\"name\":[\"group_A\",\"group_B\",\"group_C\",\"group_E\",\"group_D\",\"group_F\",\"group_G\",\"group_H\"],\"group\":[\"group_A\",\"group_B\",\"group_C\",\"group_E\",\"group_D\",\"group_F\",\"group_G\",\"group_H\"]},\"options\":{\"NodeID\":\"name\",\"NodeGroup\":\"name\",\"LinkGroup\":null,\"colourScale\":\"d3.scaleOrdinal(d3.schemeCategory20);\",\"fontSize\":7,\"fontFamily\":null,\"nodeWidth\":15,\"nodePadding\":10,\"units\":\"\",\"margin\":{\"top\":null,\"right\":null,\"bottom\":null,\"left\":null},\"iterations\":32,\"sinksRight\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\n从连接数据框生成的基础桑基图\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 加载必要的库\nlibrary(networkD3)\nlibrary(dplyr)\n\n# 创建连接数据框\nlinks <- data.frame(\n  source = c(\"group_A\", \"group_A\", \"group_B\", \"group_C\", \"group_C\", \"group_E\"),\n  target = c(\"group_C\", \"group_D\", \"group_E\", \"group_F\", \"group_G\", \"group_H\"),\n  value = c(2, 3, 2, 3, 1, 3)\n)\n\n# 从连接流中创建节点数据框：列出流中涉及的所有实体\nnodes <- data.frame(\n  name = c(as.character(links$source), as.character(links$target)) |>\n    unique()\n)\n\n# 使用networkD3时，连接必须使用id而不是链接数据框中的真实名称，因此需要重新格式化\nlinks$IDsource <- match(links$source, nodes$name) - 1\nlinks$IDtarget <- match(links$target, nodes$name) - 1\n\n# 准备颜色比例：为每个节点指定特定颜色\nmy_color <- 'd3.scaleOrdinal() .domain([\"group_A\", \"group_B\",\"group_C\", \"group_D\", \"group_E\", \"group_F\", \"group_G\", \"group_H\"]) .range([\"blue\", \"blue\" , \"blue\", \"red\", \"red\", \"yellow\", \"purple\", \"purple\"])'\n\n# 创建网络图，使用colourScale参数调用颜色比例\np <- sankeyNetwork(\n  Links = links, Nodes = nodes, Source = \"IDsource\", Target = \"IDtarget\",\n  Value = \"value\", NodeID = \"name\", colourScale = my_color\n)\np\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"sankeyNetwork html-widget html-fill-item\" id=\"htmlwidget-e06ac03bcd00a2707337\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e06ac03bcd00a2707337\">{\"x\":{\"links\":{\"source\":[0,0,1,2,2,3],\"target\":[2,4,3,5,6,7],\"value\":[2,3,2,3,1,3]},\"nodes\":{\"name\":[\"group_A\",\"group_B\",\"group_C\",\"group_E\",\"group_D\",\"group_F\",\"group_G\",\"group_H\"],\"group\":[\"group_A\",\"group_B\",\"group_C\",\"group_E\",\"group_D\",\"group_F\",\"group_G\",\"group_H\"]},\"options\":{\"NodeID\":\"name\",\"NodeGroup\":\"name\",\"LinkGroup\":null,\"colourScale\":\"d3.scaleOrdinal() .domain([\\\"group_A\\\", \\\"group_B\\\",\\\"group_C\\\", \\\"group_D\\\", \\\"group_E\\\", \\\"group_F\\\", \\\"group_G\\\", \\\"group_H\\\"]) .range([\\\"blue\\\", \\\"blue\\\" , \\\"blue\\\", \\\"red\\\", \\\"red\\\", \\\"yellow\\\", \\\"purple\\\", \\\"purple\\\"])\",\"fontSize\":7,\"fontFamily\":null,\"nodeWidth\":15,\"nodePadding\":10,\"units\":\"\",\"margin\":{\"top\":null,\"right\":null,\"bottom\":null,\"left\":null},\"iterations\":32,\"sinksRight\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\n桑基图网络可视化\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 向节点数据框添加'group'列\nnodes$group <- as.factor(c(\"a\", \"a\", \"a\", \"a\", \"a\", \"b\", \"b\", \"b\"))\n\n# 为每个组指定颜色\nmy_color <- 'd3.scaleOrdinal() .domain([\"a\", \"b\"]) .range([\"#69b3a2\", \"steelblue\"])'\n\n# 创建网络图\np <- sankeyNetwork(\n  Links = links, Nodes = nodes, Source = \"IDsource\", Target = \"IDtarget\",\n  Value = \"value\", NodeID = \"name\",\n  colourScale = my_color, NodeGroup = \"group\"\n)\np\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"sankeyNetwork html-widget html-fill-item\" id=\"htmlwidget-fc5093b77b8eb9540870\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-fc5093b77b8eb9540870\">{\"x\":{\"links\":{\"source\":[0,0,1,2,2,3],\"target\":[2,4,3,5,6,7],\"value\":[2,3,2,3,1,3]},\"nodes\":{\"name\":[\"group_A\",\"group_B\",\"group_C\",\"group_E\",\"group_D\",\"group_F\",\"group_G\",\"group_H\"],\"group\":[\"a\",\"a\",\"a\",\"a\",\"a\",\"b\",\"b\",\"b\"]},\"options\":{\"NodeID\":\"name\",\"NodeGroup\":\"group\",\"LinkGroup\":null,\"colourScale\":\"d3.scaleOrdinal() .domain([\\\"a\\\", \\\"b\\\"]) .range([\\\"#69b3a2\\\", \\\"steelblue\\\"])\",\"fontSize\":7,\"fontFamily\":null,\"nodeWidth\":15,\"nodePadding\":10,\"units\":\"\",\"margin\":{\"top\":null,\"right\":null,\"bottom\":null,\"left\":null},\"iterations\":32,\"sinksRight\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\n分组桑基图网络可视化\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 向每个连接添加'group'列\nlinks$group <- as.factor(c(\"type_a\", \"type_a\", \"type_a\", \"type_b\", \"type_b\", \"type_b\"))\n\n# 向每个节点添加'group'列，这里将所有节点放在同一组中使其显示为灰色\nnodes$group <- as.factor(c(\"my_unique_group\"))\n\n# 为每个组指定颜色\nmy_color <- 'd3.scaleOrdinal() .domain([\"type_a\", \"type_b\", \"my_unique_group\"]) .range([\"#69b3a2\", \"steelblue\", \"grey\"])'\n\n# 创建网络图\np <- sankeyNetwork(\n  Links = links, Nodes = nodes, Source = \"IDsource\", Target = \"IDtarget\",\n  Value = \"value\", NodeID = \"name\",\n  colourScale = my_color, LinkGroup = \"group\", NodeGroup = \"group\"\n)\n\np\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"sankeyNetwork html-widget html-fill-item\" id=\"htmlwidget-f46c34eeebc6722d65eb\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f46c34eeebc6722d65eb\">{\"x\":{\"links\":{\"source\":[0,0,1,2,2,3],\"target\":[2,4,3,5,6,7],\"value\":[2,3,2,3,1,3],\"group\":[\"type_a\",\"type_a\",\"type_a\",\"type_b\",\"type_b\",\"type_b\"]},\"nodes\":{\"name\":[\"group_A\",\"group_B\",\"group_C\",\"group_E\",\"group_D\",\"group_F\",\"group_G\",\"group_H\"],\"group\":[\"my_unique_group\",\"my_unique_group\",\"my_unique_group\",\"my_unique_group\",\"my_unique_group\",\"my_unique_group\",\"my_unique_group\",\"my_unique_group\"]},\"options\":{\"NodeID\":\"name\",\"NodeGroup\":\"group\",\"LinkGroup\":\"group\",\"colourScale\":\"d3.scaleOrdinal() .domain([\\\"type_a\\\", \\\"type_b\\\", \\\"my_unique_group\\\"]) .range([\\\"#69b3a2\\\", \\\"steelblue\\\", \\\"grey\\\"])\",\"fontSize\":7,\"fontFamily\":null,\"nodeWidth\":15,\"nodePadding\":10,\"units\":\"\",\"margin\":{\"top\":null,\"right\":null,\"bottom\":null,\"left\":null},\"iterations\":32,\"sinksRight\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\n连接和节点分组的桑基图网络可视化\n:::\n:::\n\n\n\n## Interactivity\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(networkD3)\n\n# 读取数据\nURL <- \"https://cdn.rawgit.com/christophergandrud/networkD3/master/JSONdata/energy.json\"\nEnergy <- jsonlite::fromJSON(URL)\n\n# 查看数据\nhead( Energy$links )\n#>   source target   value\n#> 1      0      1 124.729\n#> 2      1      2   0.597\n#> 3      1      3  26.862\n#> 4      1      4 280.322\n#> 5      1      5  81.144\n#> 6      6      2  35.000\nhead( Energy$nodes )\n#>                   name\n#> 1 Agricultural 'waste'\n#> 2       Bio-conversion\n#> 3               Liquid\n#> 4               Losses\n#> 5                Solid\n#> 6                  Gas\n# 绘制桑基图\np <- sankeyNetwork(\n    Links = Energy$links, # 连接数据\n    Nodes = Energy$nodes, # 节点数据\n    Source = \"source\",    # 源节点列名\n    Target = \"target\",    # 目标节点列名\n    Value = \"value\",      # 流量值列名\n    NodeID = \"name\",      # 节点名称列名\n    units = \"TWh\",        # 单位标签\n    fontSize = 12,        # 字体大小\n    nodeWidth = 30        # 节点宽度\n)\np\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"sankeyNetwork html-widget html-fill-item\" id=\"htmlwidget-9134c9ccc2f9373b0085\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9134c9ccc2f9373b0085\">{\"x\":{\"links\":{\"source\":[0,1,1,1,1,6,7,8,10,9,11,11,11,15,15,15,15,15,15,15,15,15,15,15,23,25,5,5,5,5,5,27,17,17,28,29,2,2,2,2,2,2,2,2,34,24,35,36,38,37,39,39,40,40,41,42,43,43,4,4,4,26,26,26,44,45,46,47],\"target\":[1,2,3,4,5,2,4,9,9,4,12,13,14,16,14,17,12,18,19,13,3,20,21,22,24,24,13,3,26,19,12,15,28,3,18,15,12,30,18,31,32,19,33,20,1,5,26,37,37,2,4,1,14,13,15,14,42,41,19,26,12,15,3,11,15,1,15,15],\"value\":[124.729,0.597,26.862,280.322,81.14400000000001,35,35,11.606,63.965,75.571,10.639,22.505,46.184,104.453,113.726,27.14,342.165,37.797,4.412,40.858,56.691,7.863,90.008,93.494,40.719,82.233,0.129,1.401,151.891,2.096,48.58,7.013,20.897,6.242,20.897,6.995,121.066,128.69,135.835,14.458,206.267,3.64,33.218,4.413,4.375,122.952,839.978,504.287,107.703,611.99,56.587,77.81,193.026,70.672,59.901,19.263,19.263,59.901,0.882,400.12,46.477,525.5309999999999,787.129,79.32899999999999,9.452,182.01,19.013,289.366]},\"nodes\":{\"name\":[\"Agricultural 'waste'\",\"Bio-conversion\",\"Liquid\",\"Losses\",\"Solid\",\"Gas\",\"Biofuel imports\",\"Biomass imports\",\"Coal imports\",\"Coal\",\"Coal reserves\",\"District heating\",\"Industry\",\"Heating and cooling - commercial\",\"Heating and cooling - homes\",\"Electricity grid\",\"Over generation / exports\",\"H2 conversion\",\"Road transport\",\"Agriculture\",\"Rail transport\",\"Lighting & appliances - commercial\",\"Lighting & appliances - homes\",\"Gas imports\",\"Ngas\",\"Gas reserves\",\"Thermal generation\",\"Geothermal\",\"H2\",\"Hydro\",\"International shipping\",\"Domestic aviation\",\"International aviation\",\"National navigation\",\"Marine algae\",\"Nuclear\",\"Oil imports\",\"Oil\",\"Oil reserves\",\"Other waste\",\"Pumped heat\",\"Solar PV\",\"Solar Thermal\",\"Solar\",\"Tidal\",\"UK land based bioenergy\",\"Wave\",\"Wind\"],\"group\":[\"Agricultural 'waste'\",\"Bio-conversion\",\"Liquid\",\"Losses\",\"Solid\",\"Gas\",\"Biofuel imports\",\"Biomass imports\",\"Coal imports\",\"Coal\",\"Coal reserves\",\"District heating\",\"Industry\",\"Heating and cooling - commercial\",\"Heating and cooling - homes\",\"Electricity grid\",\"Over generation / exports\",\"H2 conversion\",\"Road transport\",\"Agriculture\",\"Rail transport\",\"Lighting & appliances - commercial\",\"Lighting & appliances - homes\",\"Gas imports\",\"Ngas\",\"Gas reserves\",\"Thermal generation\",\"Geothermal\",\"H2\",\"Hydro\",\"International shipping\",\"Domestic aviation\",\"International aviation\",\"National navigation\",\"Marine algae\",\"Nuclear\",\"Oil imports\",\"Oil\",\"Oil reserves\",\"Other waste\",\"Pumped heat\",\"Solar PV\",\"Solar Thermal\",\"Solar\",\"Tidal\",\"UK land based bioenergy\",\"Wave\",\"Wind\"]},\"options\":{\"NodeID\":\"name\",\"NodeGroup\":\"name\",\"LinkGroup\":null,\"colourScale\":\"d3.scaleOrdinal(d3.schemeCategory20);\",\"fontSize\":12,\"fontFamily\":null,\"nodeWidth\":30,\"nodePadding\":10,\"units\":\"TWh\",\"margin\":{\"top\":null,\"right\":null,\"bottom\":null,\"left\":null},\"iterations\":32,\"sinksRight\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\n能源流向桑基图：展示能源从来源到终端的完整流向\n:::\n:::\n\n\n## Bump chart\n\n[![Sankey Bump Chart](./image/sankey-bump-chart.png)](https://r-graph-gallery.com/web-sankey-diagram-with-highlight.html)\n\n[![European Refugee Flows](./image/european-refugee-flows.png)](https://r-graph-gallery.com/web-sankey-refugees.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/d3-4.9.1/d3.min.js\"></script>\n<script src=\"site_libs/sankey-1/sankey.js\"></script>\n<script src=\"site_libs/sankeyNetwork-binding-0.4.1/sankeyNetwork.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}