{
  "hash": "01c460b977c84d6ecefadbcb055db81e",
  "result": {
    "engine": "knitr",
    "markdown": "# Parallel {#sec-parallel}\n\n## PKG\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Libraries\nlibrary(tidyverse)\nlibrary(hrbrthemes) # 主题\nlibrary(patchwork) # 拼接图\nlibrary(GGally) # 平行坐标图\nlibrary(viridis) # 颜色\nlibrary(ggbump) # 平行坐标图\n```\n:::\n\n\n## 是什么?\nìris 数据集为 150 朵花样本（每朵用颜色线表示）提供了四个特征（每个用垂直线表示）。样本分为三种物种。下方的图表高效地突显出，山鸢尾的花瓣较小，但其萼片倾向于更宽。\n\n平行坐标图相当于蜘蛛图，但使用笛卡尔坐标。比蜘蛛图更易于阅读，尤其是当变量/观测数量较多时。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用R自带的iris数据集\ndata <- iris\n\n# 绘制平行坐标图\ndata |>\n    ggparcoord(\n        columns = 1:4,                # 选择前4列作为变量\n        groupColumn = 5,              # 第5列（Species）作为分组变量\n        order = \"anyClass\",           # 自动排序变量\n        showPoints = TRUE,            # 显示数据点\n        title = \"Parallel Coordinate Plot for the Iris Data\", # 图标题\n        alphaLines = 0.3              # 线条透明度\n    ) +\n    scale_color_viridis(discrete = TRUE) + # 使用viridis色带\n    theme_ipsum() +                       # 应用hrbrthemes主题\n    theme(\n        plot.title = element_text(size = 10) # 设置标题字体大小\n    )\n```\n\n::: {.cell-output-display}\n![](parallel_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n**变量** 和 **单位** 可以不同:\n\n下图比较了四个使用不同单位的变量，例如价格（美元）或深度（百分比）。请注意使用缩放 (见下文) 以便进行比较。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 从diamonds数据集中随机抽取10个样本，绘制平行坐标图\ndiamonds |>\n    sample_n(10) |> # 随机抽取10行\n    ggparcoord(\n        columns = c(1, 5:7),      # 选择第1、5、6、7列作为变量\n        groupColumn = 2,          # 用第2列（cut）作为分组变量\n        #order = \"anyClass\",      # 可选：自动排序变量\n        showPoints = TRUE,        # 显示数据点\n        title = \"Diamonds features\", # 图标题\n        alphaLines = 0.3          # 线条透明度\n    ) +\n    scale_color_viridis(discrete = TRUE) + # 使用viridis色带\n    theme_ipsum() +                       # 应用hrbrthemes主题\n    theme(\n        plot.title = element_text(size = 10) # 设置标题字体大小\n    )\n```\n\n::: {.cell-output-display}\n![](parallel_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n坐标轴顺序:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 原始顺序的平行坐标图\np1 <- data |>\n    ggparcoord(\n        columns = 1:4,                # 选择前4列作为变量\n        groupColumn = 5,              # 第5列（Species）作为分组变量\n        order = c(1:4),               # 按原始顺序排列坐标轴\n        showPoints = TRUE,            # 显示数据点\n        title = \"Original\",           # 图标题\n        alphaLines = 0.3              # 线条透明度\n    ) +\n    scale_color_viridis(discrete = TRUE) + # 使用viridis色带\n    theme_ipsum() +                       # 应用hrbrthemes主题\n    theme(\n        legend.position = \"default\",         # 图例位置为默认\n        plot.title = element_text(size = 10) # 设置标题字体大小\n    ) +\n    xlab(\"\")\n\n# 自动排序后的平行坐标图\np2 <- data |>\n    ggparcoord(\n        columns = 1:4,                # 选择前4列作为变量\n        groupColumn = 5,              # 第5列（Species）作为分组变量\n        order = \"anyClass\",           # 自动排序坐标轴\n        showPoints = TRUE,            # 显示数据点\n        title = \"Re-ordered\",         # 图标题\n        alphaLines = 0.3              # 线条透明度\n    ) +\n    scale_color_viridis(discrete = TRUE) +\n    theme_ipsum() +\n    theme(\n        legend.position = \"none\",             # 不显示图例\n        plot.title = element_text(size = 10)\n    ) +\n    xlab(\"\")\n\n# 拼接两个不同坐标轴顺序的平行坐标图\np1 + p2\n```\n\n::: {.cell-output-display}\n![比较不同坐标轴顺序对平行坐标图的影响](parallel_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n关键点:\n\n- 和折线图一样，展示太多样本会导致杂乱无章、难以辨认的面条图。\n- 应该将变量在 X 轴上排序，尽量避免样本线交叉。\n- 尝试不同的缩放比例，找到最适合数据的\n\n## `ggally`\n\n### 基本\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用ggparcoord函数绘制iris数据集的基础平行坐标图\niris |>\n    ggparcoord(\n        columns = 1:4,      # 选择前4列作为变量（花萼长度、花萼宽度、花瓣长度、花瓣宽度）\n        groupColumn = 5     # 第5列（Species）作为分组变量，不同物种用不同颜色区分\n    )\n```\n\n::: {.cell-output-display}\n![使用ggparcoord绘制iris数据集的基础平行坐标图](parallel_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### 定制\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用ggparcoord绘制iris数据集的平行坐标图，并进行详细定制\niris |>\n    ggparcoord(\n        columns = 1:4,                # 选择前4列作为变量（花萼长度、花萼宽度、花瓣长度、花瓣宽度）\n        groupColumn = 5,              # 第5列（Species）作为分组变量，不同物种用不同颜色区分\n        order = \"anyClass\",           # 自动排序变量顺序，减少线条交叉\n        showPoints = TRUE,            # 显示每个观测点\n        title = \"Parallel Coordinate Plot for the Iris Data\", # 图标题\n        alphaLines = 0.3              # 线条透明度，便于观察重叠\n    ) +\n    scale_color_viridis(discrete = TRUE) + # 使用viridis色带，提升可读性\n    theme_ipsum() +                       # 应用hrbrthemes主题，美化图形\n    theme(\n        plot.title = element_text(size = 10) # 设置标题字体大小\n    )\n```\n\n::: {.cell-output-display}\n![自定义配色与主题的平行坐标图示例](parallel_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n### 缩放\n\n`ggally` 的 `scale` 参数有四种可能的选项：\n\n- globalminmax → 不进行缩放\n- uniminmax → 标准化到 Min = 0 和 Max = 1\n- std → 单变量标准化（减去均值并除以标准差）\n- center → 标准化和中心化变量\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 不进行缩放\np1 <- data |>\n    ggparcoord(\n        columns = 1:4,                # 选择前4列作为变量\n        groupColumn = 5,              # 第5列（Species）作为分组变量\n        order = \"anyClass\",           # 自动排序变量\n        scale = \"globalminmax\",       # 全局最小最大值缩放（无缩放）\n        showPoints = TRUE,            # 显示数据点\n        title = \"No scaling\",         # 图标题\n        alphaLines = 0.3              # 线条透明度\n    ) +\n    scale_color_viridis(discrete = TRUE) + # 使用viridis色带\n    theme_ipsum() +                       # 应用hrbrthemes主题\n    theme(\n        legend.position = \"none\",           # 不显示图例\n        plot.title = element_text(size = 10) # 设置标题字体大小\n    ) +\n    xlab(\"\")\n\n# 每个变量标准化到[0,1]区间\np2 <- data |>\n    ggparcoord(\n        columns = 1:4,                # 选择前4列作为变量\n        groupColumn = 5,              # 第5列（Species）作为分组变量\n        order = \"anyClass\",           # 自动排序变量\n        scale = \"uniminmax\",          # 每个变量单独缩放到[0,1]\n        showPoints = TRUE,            # 显示数据点\n        title = \"Standardize to Min = 0 and Max = 1\", # 图标题\n        alphaLines = 0.3              # 线条透明度\n    ) +\n    scale_color_viridis(discrete = TRUE) +\n    theme_ipsum() +\n    theme(\n        legend.position = \"none\",\n        plot.title = element_text(size = 10)\n    ) +\n    xlab(\"\")\n\n# 每个变量减去均值再除以标准差（标准化）\np3 <- data |>\n    ggparcoord(\n        columns = 1:4,                # 选择前4列作为变量\n        groupColumn = 5,              # 第5列（Species）作为分组变量\n        order = \"anyClass\",           # 自动排序变量\n        scale = \"std\",                # 标准化（减均值除标准差）\n        showPoints = TRUE,            # 显示数据点\n        title = \"Normalize univariately (substract mean & divide by sd)\", # 图标题\n        alphaLines = 0.3              # 线条透明度\n    ) +\n    scale_color_viridis(discrete = TRUE) +\n    theme_ipsum() +\n    theme(\n        legend.position = \"none\",\n        plot.title = element_text(size = 10)\n    ) +\n    xlab(\"\")\n\n# 每个变量中心化（减去均值）\np4 <- data |>\n    ggparcoord(\n        columns = 1:4,                # 选择前4列作为变量\n        groupColumn = 5,              # 第5列（Species）作为分组变量\n        order = \"anyClass\",           # 自动排序变量\n        scale = \"center\",             # 中心化（减去均值）\n        showPoints = TRUE,            # 显示数据点\n        title = \"Standardize and center variables\", # 图标题\n        alphaLines = 0.3              # 线条透明度\n    ) +\n    scale_color_viridis(discrete = TRUE) +\n    theme_ipsum() +\n    theme(\n        legend.position = \"none\",\n        plot.title = element_text(size = 10)\n    ) +\n    xlab(\"\")\n\n# 拼接四种缩放方式的平行坐标图\np1 + p2 + p3 + p4 + plot_layout(ncol = 2)\n```\n\n::: {.cell-output-display}\n![比较不同缩放方法对平行坐标图的影响](parallel_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### 高亮\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |>\n    ggparcoord(\n        columns = 1:4,                # 选择前4列作为变量\n        groupColumn = 5,              # 第5列（Species）作为分组变量\n        order = \"anyClass\",           # 自动排序变量顺序\n        showPoints = TRUE,            # 显示数据点\n        title = \"Original\",           # 图标题\n        alphaLines = 0.3              # 线条透明度\n    ) +\n    scale_color_manual(values = c(\"#69b3a2\", \"grey\", \"grey\")) + # 手动设置颜色，突出显示第一个类别\n    theme_ipsum() +                       # 应用hrbrthemes主题\n    theme(\n        legend.position = \"default\",        # 图例位置为默认\n        plot.title = element_text(size = 10) # 设置标题字体大小\n    ) +\n    xlab(\"\")                             # 去除x轴标签\n```\n\n::: {.cell-output-display}\n![突出显示某一类别的平行坐标图](parallel_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## `mass`\n\n顺序至关重要呢! 需要改变输入数据的列顺序，以便在平行坐标图中正确显示变量。\n\n### 顺序\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 加载所需包\nlibrary(MASS)         # 提供parcoord函数\nlibrary(RColorBrewer) # 提供调色板\n\n# 设置调色板，选用Set1配色方案的前3种颜色\npalette <- brewer.pal(3, \"Set1\")\n# 根据iris数据集的Species列为每个样本分配颜色\nmy_colors <- palette[as.numeric(iris$Species)]\n\n# 使用parcoord函数绘制平行坐标图\nparcoord(\n    iris[, c(1, 3, 4, 2)], # 选择变量顺序（花萼长度、花瓣长度、花瓣宽度、花萼宽度）\n    col = my_colors        # 按物种分配颜色\n)\n```\n\n::: {.cell-output-display}\n![使用MASS包的parcoord函数绘制iris数据集的平行坐标图（自定义配色）](parallel_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### 高亮\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 创建一个颜色向量，setosa类别为红色，其余为灰色\nisSetosa <- ifelse(iris$Species == \"setosa\", \"red\", \"grey\")\n\n# 使用parcoord函数绘制平行坐标图\n# 选择变量顺序（花萼长度、花瓣长度、花瓣宽度、花萼宽度）\n# setosa类别用红色高亮，其余类别为灰色\nparcoord(\n    iris[, c(1, 3, 4, 2)], # 选择变量顺序\n    col = isSetosa         # 按类别分配颜色\n)\n```\n\n::: {.cell-output-display}\n![突出显示setosa类别的平行坐标图（MASS::parcoord）](parallel_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## `ggbump`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 创建数据\nyear <- rep(2019:2021, 3) # 年份，每个门店3年\nproducts_sold <- c(\n    500, 600, 700,   # Store A 各年份销量\n    550, 650, 600,   # Store B 各年份销量\n    600, 400, 500    # Store C 各年份销量\n)\nstore <- c(\n    \"Store A\", \"Store A\", \"Store A\",\n    \"Store B\", \"Store B\", \"Store B\",\n    \"Store C\", \"Store C\", \"Store C\"\n)\n\n# 创建数据框\ndf <- data.frame(\n    year = year,\n    products_sold = products_sold,\n    store = store\n)\n\n# 绘制bump图，展示不同门店产品销量随年份的变化\nggplot(df, aes(x = year, y = products_sold, color = store)) +\n    geom_bump(size = 2) # 使用geom_bump绘制平滑的连线\n```\n\n::: {.cell-output-display}\n![使用ggbump绘制不同门店产品销量随年份变化的平行坐标（bump）图](parallel_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### 点\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用ggplot绘制bump图，并在每个数据点处添加圆点\nggplot(df, aes(x = year, y = products_sold, color = store)) +\n    geom_bump(size = 2) +         # 绘制平滑的bump连线，展示销量变化趋势\n    geom_point(size = 6)          # 在每个年份的销量位置添加大圆点，突出显示具体数值\n```\n\n::: {.cell-output-display}\n![在bump图中添加数据点，展示不同门店各年份销量的具体数值](parallel_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n## Pearl\n\n[![Radar Chart](./image/radar.png)](https://r-graph-gallery.com/web-radar-chart-with-R.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}