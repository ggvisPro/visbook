{
  "hash": "5100215e5ea74b80cf7bbd7b3ef1304a",
  "result": {
    "engine": "knitr",
    "markdown": "# Cir-bar {#sec-cir-bar}\n\n## PKG\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # 数据处理和可视化\nlibrary(hrbrthemes) # 主题和字体\n# library(kableExtra) # 表格美化\nlibrary(viridis) # 色彩映射\n```\n:::\n\n\n## 基础\n\n### 定义\n\n极坐标条形图：各国武器销售情况, 这里没有显示 Y 轴刻度，因为每个条形上都标注了确切数值。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 从github加载数据集\ndata <- read_csv(\n    \"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum.csv\"\n)\n\n# 对数据进行排序和预处理\ntmp <- data |>\n    filter(!is.na(Value)) |> # 过滤掉Value为NA的行\n    arrange(desc(Value)) |>  # 按Value降序排列\n    mutate(Country = factor(Country, Country)) # 将Country设置为因子，顺序与数据一致\n\n# 设置空白条的数量，用于美化图形\nempty_bar = 10\n\n# 添加空白行到数据末尾\nto_add = matrix(NA, empty_bar, ncol(tmp))\ncolnames(to_add) = colnames(tmp)\ntmp = rbind(tmp, to_add)\ntmp$id = seq(1, nrow(tmp)) # 为每一行添加唯一id\n\n# 获取每个标签的名称和y轴位置\nlabel_tmp = tmp\nnumber_of_bar = nrow(label_tmp)\n# 计算每个标签的角度，使标签位于条形中心\nangle = 90 - 360 * (label_tmp$id - 0.5) / number_of_bar\nlabel_tmp$hjust <- ifelse(angle < -90, 1, 0) # 角度小于-90时右对齐，否则左对齐\nlabel_tmp$angle <- ifelse(angle < -90, angle + 180, angle) # 角度小于-90时加180度，保证文字正向\nlabel_tmp$Country <- gsub(\"United States\", \"US\", label_tmp$Country) # 替换国家名\nlabel_tmp$Country <- paste(\n    label_tmp$Country,\n    \" (\",\n    label_tmp$Value,\n    \")\",\n    sep = \"\"\n) # 拼接国家名和数值\n\n# 绘制极坐标条形图\nggplot(tmp, aes(x = as.factor(id), y = Value)) + # id作为x轴，必须为因子，否则首尾有空隙\n    geom_bar(stat = \"identity\", fill = alpha(\"#69b3a2\", 0.8)) + # 绘制条形\n    ylim(-7000, 13000) + # 设置y轴范围\n    theme_minimal() + # 极简主题\n    theme(\n        axis.text = element_blank(), # 去除坐标轴文字\n        axis.title = element_blank(), # 去除坐标轴标题\n        panel.grid = element_blank(), # 去除网格线\n        plot.margin = unit(rep(-1, 4), \"cm\") # 设置负边距，减少空白\n    ) +\n    coord_polar(start = 0) + # 转换为极坐标\n    geom_text(\n        data = label_tmp,\n        aes(x = id, y = Value + 200, label = Country),\n        color = \"black\",\n        fontface = \"bold\",\n        alpha = 0.6,\n        size = 2.5,\n        angle = label_tmp$angle, # 设置标签角度\n        hjust = label_tmp$hjust, # 设置对齐方式\n        inherit.aes = FALSE\n    ) + # 添加国家标签\n    geom_text(\n        aes(x = 24, y = 8000, label = \"Who sells more weapons?\"),\n        color = \"black\",\n        inherit.aes = FALSE\n    ) # 添加中心标题\n```\n\n::: {.cell-output-display}\n![极坐标条形图：各国武器销售情况](cir-bar_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n### 适用\n\n圆形条形图确实很吸引眼球，但使得阅读每根条形之间的差异更加困难。\n\n因此，圆形条形图只有在展示大量条形且能明显呈现出某种模式时才有意义。\n\n圆形条形图在加入分组变量后更加有趣。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 构造虚拟数据集\ndata = data.frame(\n    individual = paste(\"Mister \", seq(1, 60), sep = \"\"), # 生成60个个体名称\n    group = c(rep('A', 10), rep('B', 30), rep('C', 14), rep('D', 6)), # 分组变量\n    value = sample(seq(10, 100), 60, replace = TRUE) # 随机生成数值\n)\ndata = data |> arrange(group, value) # 按分组和数值排序\n\n# 设置每组末尾添加的空白条数量，用于分隔分组\nempty_bar = 3\nto_add = data.frame(matrix(NA, empty_bar * nlevels(factor(data$group)), ncol(data))) # 构造空白行\ncolnames(to_add) = colnames(data)\nto_add$group = rep(levels(factor(data$group)), each = empty_bar) # 每组添加空白条\ndata = rbind(data, to_add) # 合并数据和空白条\ndata = data |> arrange(group) # 再次按分组排序\ndata$id = seq(1, nrow(data)) # 为每一行添加唯一id\n\n# 获取每个标签的名称和y轴位置\nlabel_data = data\nnumber_of_bar = nrow(label_data)\n# 计算每个标签的角度，使标签位于条形中心\nangle = 90 - 360 * (label_data$id - 0.5) / number_of_bar\nlabel_data$hjust <- ifelse(angle < -90, 1, 0) # 角度小于-90时右对齐，否则左对齐\nlabel_data$angle <- ifelse(angle < -90, angle + 180, angle) # 角度小于-90时加180度，保证文字正向\n\n# 构造分组基线数据，用于分组底部的线和分组标签\nbase_data = data |>\n    group_by(group) |>\n    summarize(start = min(id), end = max(id) - empty_bar) |>\n    rowwise() |>\n    mutate(title = mean(c(start, end)))\n\n# 构造网格线数据，用于绘制圆环上的刻度线\ngrid_data = base_data\ngrid_data$end = grid_data$end[c(nrow(grid_data), 1:nrow(grid_data) - 1)] + 1\ngrid_data$start = grid_data$start - 1\ngrid_data = grid_data[-1, ]\n\n# 绘制极坐标分组条形图\np = ggplot(data, aes(x = as.factor(id), y = value, fill = group)) + # id作为x轴，必须为因子\n    geom_bar(\n        aes(x = as.factor(id), y = value, fill = group),\n        stat = \"identity\",\n        alpha = 0.5\n    ) +\n    # 添加圆环刻度线\n    geom_segment(\n        data = grid_data,\n        aes(x = end, y = 80, xend = start, yend = 80),\n        colour = \"grey\",\n        alpha = 1,\n        size = 0.3,\n        inherit.aes = FALSE\n    ) +\n    geom_segment(\n        data = grid_data,\n        aes(x = end, y = 60, xend = start, yend = 60),\n        colour = \"grey\",\n        alpha = 1,\n        size = 0.3,\n        inherit.aes = FALSE\n    ) +\n    geom_segment(\n        data = grid_data,\n        aes(x = end, y = 40, xend = start, yend = 40),\n        colour = \"grey\",\n        alpha = 1,\n        size = 0.3,\n        inherit.aes = FALSE\n    ) +\n    geom_segment(\n        data = grid_data,\n        aes(x = end, y = 20, xend = start, yend = 20),\n        colour = \"grey\",\n        alpha = 1,\n        size = 0.3,\n        inherit.aes = FALSE\n    ) +\n    # 添加刻度值文本\n    annotate(\n        \"text\",\n        x = rep(max(data$id), 4),\n        y = c(20, 40, 60, 80),\n        label = c(\"20\", \"40\", \"60\", \"80\"),\n        color = \"grey\",\n        size = 3,\n        angle = 0,\n        fontface = \"bold\",\n        hjust = 1\n    ) +\n    geom_bar(\n        aes(x = as.factor(id), y = value, fill = group),\n        stat = \"identity\",\n        alpha = 0.5\n    ) +\n    ylim(-100, 120) + # 设置y轴范围\n    theme_minimal() + # 极简主题\n    theme(\n        legend.position = \"none\", # 不显示图例\n        axis.text = element_blank(), # 去除坐标轴文字\n        axis.title = element_blank(), # 去除坐标轴标题\n        panel.grid = element_blank(), # 去除网格线\n        plot.margin = unit(rep(-1, 4), \"cm\") # 设置负边距，减少空白\n    ) +\n    coord_polar() + # 转换为极坐标\n    # 添加个体标签\n    geom_text(\n        data = label_data,\n        aes(x = id, y = value + 10, label = individual, hjust = hjust),\n        color = \"black\",\n        fontface = \"bold\",\n        alpha = 0.6,\n        size = 2.5,\n        angle = label_data$angle,\n        inherit.aes = FALSE\n    ) +\n    # 添加分组底部基线\n    geom_segment(\n        data = base_data,\n        aes(x = start, y = -5, xend = end, yend = -5),\n        colour = \"black\",\n        alpha = 0.8,\n        size = 0.6,\n        inherit.aes = FALSE\n    ) +\n    # 添加分组标签\n    geom_text(\n        data = base_data,\n        aes(x = title, y = -18, label = group),\n        hjust = c(1, 1, 0, 0),\n        colour = \"black\",\n        alpha = 0.8,\n        size = 4,\n        fontface = \"bold\",\n        inherit.aes = FALSE\n    )\np\n```\n\n::: {.cell-output-display}\n![分组极坐标条形图：分组比较示例](cir-bar_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### 变体\n\n堆叠圆形条形图\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 构造数据集，包含3个观测变量\ndata = data.frame(\n    individual = paste(\"Mister \", seq(1, 60), sep = \"\"), # 个体名称\n    group = c(rep('A', 10), rep('B', 30), rep('C', 14), rep('D', 6)), # 分组变量\n    value1 = sample(seq(10, 100), 60, replace = TRUE), # 观测1\n    value2 = sample(seq(10, 100), 60, replace = TRUE), # 观测2\n    value3 = sample(seq(10, 100), 60, replace = TRUE)  # 观测3\n)\n\n# 转换为长格式，便于堆叠绘图\ndata = data |>\n    tidyr::gather(key = \"observation\", value = \"value\", -c(1, 2))\n\n# 设置每组末尾添加的空白条数量，用于分隔分组\nempty_bar = 2\nnObsType = nlevels(as.factor(data$observation))\nto_add = data.frame(matrix(\n    NA,\n    empty_bar * nlevels(as.factor(data$group)) * nObsType,\n    ncol(data)\n))\ncolnames(to_add) = colnames(data)\nto_add$group = rep(levels(as.factor(data$group)), each = empty_bar * nObsType)\ndata = rbind(data, to_add)\ndata = data |>\n    arrange(group, individual)\ndata$id = rep(seq(1, nrow(data) / nObsType), each = nObsType) # 为每个个体分配唯一id\n\n# 计算每个标签的名称和y轴位置（总和）\nlabel_data = data |>\n    group_by(id, individual) |>\n    summarize(tot = sum(value, na.rm = TRUE))\nnumber_of_bar = nrow(label_data)\n# 计算每个标签的角度，使标签位于条形中心\nangle = 90 - 360 * (label_data$id - 0.5) / number_of_bar\nlabel_data$hjust <- ifelse(angle < -90, 1, 0) # 角度小于-90时右对齐，否则左对齐\nlabel_data$angle <- ifelse(angle < -90, angle + 180, angle) # 角度小于-90时加180度，保证文字正向\n\n# 构造分组基线数据，用于分组底部的线和分组标签\nbase_data = data |>\n    group_by(group) |>\n    summarize(start = min(id), end = max(id) - empty_bar) |>\n    rowwise() |>\n    mutate(title = mean(c(start, end)))\n\n# 构造网格线数据，用于绘制圆环上的刻度线\ngrid_data = base_data\ngrid_data$end = grid_data$end[c(nrow(grid_data), 1:nrow(grid_data) - 1)] + 1\ngrid_data$start = grid_data$start - 1\ngrid_data = grid_data[-1, ]\n\n# 绘制堆叠极坐标条形图\np = ggplot(data) +\n    # 添加堆叠条形\n    geom_bar(\n        aes(x = as.factor(id), y = value, fill = observation),\n        stat = \"identity\",\n        alpha = 0.5\n    ) +\n    scale_fill_viridis(discrete = TRUE) +\n    # 添加圆环刻度线\n    geom_segment(\n        data = grid_data,\n        aes(x = end, y = 0, xend = start, yend = 0),\n        colour = \"grey\",\n        alpha = 1,\n        size = 0.3,\n        inherit.aes = FALSE\n    ) +\n    geom_segment(\n        data = grid_data,\n        aes(x = end, y = 50, xend = start, yend = 50),\n        colour = \"grey\",\n        alpha = 1,\n        size = 0.3,\n        inherit.aes = FALSE\n    ) +\n    geom_segment(\n        data = grid_data,\n        aes(x = end, y = 100, xend = start, yend = 100),\n        colour = \"grey\",\n        alpha = 1,\n        size = 0.3,\n        inherit.aes = FALSE\n    ) +\n    geom_segment(\n        data = grid_data,\n        aes(x = end, y = 150, xend = start, yend = 150),\n        colour = \"grey\",\n        alpha = 1,\n        size = 0.3,\n        inherit.aes = FALSE\n    ) +\n    geom_segment(\n        data = grid_data,\n        aes(x = end, y = 200, xend = start, yend = 200),\n        colour = \"grey\",\n        alpha = 1,\n        size = 0.3,\n        inherit.aes = FALSE\n    ) +\n    # 添加刻度值文本\n    annotate(\n        \"text\",\n        x = rep(max(data$id, na.rm = TRUE), 5),\n        y = c(0, 50, 100, 150, 200),\n        label = c(\"0\", \"50\", \"100\", \"150\", \"200\"),\n        color = \"grey\",\n        size = 2,\n        angle = 0,\n        fontface = \"bold\",\n        hjust = 1\n    ) +\n    ylim(-150, max(label_data$tot, na.rm = TRUE)) + # 设置y轴范围\n    theme_minimal() +\n    theme(\n        legend.position = \"none\", # 不显示图例\n        axis.text = element_blank(), # 去除坐标轴文字\n        axis.title = element_blank(), # 去除坐标轴标题\n        panel.grid = element_blank(), # 去除网格线\n        plot.margin = unit(rep(-1, 4), \"cm\") # 设置负边距，减少空白\n    ) +\n    coord_polar() + # 转换为极坐标\n    # 添加个体标签\n    geom_text(\n        data = label_data,\n        aes(x = id, y = tot + 10, label = individual, hjust = hjust),\n        color = \"black\",\n        fontface = \"bold\",\n        alpha = 0.6,\n        size = 1,\n        angle = label_data$angle,\n        inherit.aes = FALSE\n    ) +\n    # 添加分组底部基线\n    geom_segment(\n        data = base_data,\n        aes(x = start, y = -5, xend = end, yend = -5),\n        colour = \"black\",\n        alpha = 0.8,\n        size = 0.6,\n        inherit.aes = FALSE\n    ) +\n    # 添加分组标签\n    geom_text(\n        data = base_data,\n        aes(x = title, y = -18, label = group),\n        hjust = c(1, 1, 0, 0),\n        colour = \"black\",\n        alpha = 0.8,\n        size = 4,\n        fontface = \"bold\",\n        inherit.aes = FALSE\n    )\np\n```\n\n::: {.cell-output-display}\n![堆叠圆形条形图：多变量分组比较示例](cir-bar_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### 注意\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 创建数据集\ndata = data.frame(\n    individual = paste(\"Mister \", seq(1, 30), sep = \"\"), # 生成30个个体名称\n    group = c(rep('A', 10), rep('C', 14), rep('D', 6)), # 分组变量\n    value = sample(seq(10, 100), 30, replace = TRUE) # 随机生成数值\n)\ndata = data |> arrange(group, value) # 按分组和数值排序\n\n# 设置每组末尾添加的空白条数量，用于分隔分组\nempty_bar = 1\nto_add = data.frame(matrix(NA, empty_bar * nlevels(factor(data$group)), ncol(data))) # 构造空白行\ncolnames(to_add) = colnames(data)\nto_add$group = rep(levels(factor(data$group)), each = empty_bar) # 每组添加空白条\ndata = rbind(data, to_add) # 合并数据和空白条\ndata = data |> arrange(group) # 再次按分组排序\ndata$id = seq(1, nrow(data)) # 为每一行添加唯一id\n\n# 获取每个标签的名称和y轴位置\nlabel_data = data\nnumber_of_bar = nrow(label_data)\n# 计算每个标签的角度，使标签位于条形中心\nangle = 90 - 360 * (label_data$id - 0.5) / number_of_bar # 角度减去0.5保证标签居中\nlabel_data$hjust <- ifelse(angle < -90, 1, 0) # 角度小于-90时右对齐，否则左对齐\nlabel_data$angle <- ifelse(angle < -90, angle + 180, angle) # 角度小于-90时加180度，保证文字正向\n\n# 绘制极坐标条形图\np = ggplot(data, aes(x = as.factor(id), y = value, fill = group)) + # id作为x轴，必须为因子\n    geom_bar(\n        aes(x = as.factor(id), y = value, fill = group),\n        stat = \"identity\",\n        alpha = 0.5\n    ) +\n    ylim(-10, 120) + # 设置y轴范围\n    theme_minimal() + # 极简主题\n    theme(\n        legend.position = \"none\", # 不显示图例\n        axis.text = element_blank(), # 去除坐标轴文字\n        axis.title = element_blank(), # 去除坐标轴标题\n        panel.grid = element_blank(), # 去除网格线\n        plot.margin = unit(rep(-1, 4), \"cm\") # 设置负边距，减少空白\n    ) +\n    coord_polar() + # 转换为极坐标\n    # 添加个体标签\n    geom_text(\n        data = label_data,\n        aes(x = id, y = value + 10, label = individual, hjust = hjust),\n        color = \"black\",\n        fontface = \"bold\",\n        alpha = 0.6,\n        size = 2.5,\n        angle = label_data$angle,\n        inherit.aes = FALSE\n    )\n\np\n```\n\n::: {.cell-output-display}\n![内圆比例较小时的极坐标条形图, 严重倾斜](cir-bar_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n- 内圆的比例必须很大（>1/2）否则条形图会严重倾斜, 如上图\n  \n- 适合 40 个以上条形\n\n- 圆周上显示Y轴\n\n- 排序: 自有顺序或数值排序\n\n- 为了显示*每个组的样本数*, 不要使用条形图. 会丢失信息\n\n\n## Cir-bar\n\n### 基本\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Libraries\n#| fig-cap: \"基础极坐标条形图示例\"\n\n# 构造数据集\ndata <- data.frame(\n    id = seq(1, 60), # 生成1到60的id\n    individual = paste(\"Mister \", seq(1, 60), sep = \"\"), # 个体名称\n    value = sample(seq(10, 100), 60, replace = TRUE) # 随机生成数值\n)\n\n# 绘制极坐标条形图\np <- ggplot(data, aes(x = as.factor(id), y = value)) + # id需转为因子，保证首尾无空隙\n    geom_bar(stat = \"identity\", fill = alpha(\"blue\", 0.3)) + # 添加条形，设置透明蓝色\n    ylim(-100, 120) + # y轴范围，负值控制内圆比例，正值用于条形高度\n    theme_minimal() + # 极简主题\n    theme(\n        axis.text = element_blank(), # 去除坐标轴文字\n        axis.title = element_blank(), # 去除坐标轴标题\n        panel.grid = element_blank(), # 去除网格线\n        plot.margin = unit(rep(-2, 4), \"cm\") # 设置负边距，减少空白\n    ) +\n    coord_polar(start = 0) # 转换为极坐标\np\n```\n\n::: {.cell-output-display}\n![](cir-bar_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### label\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 构造数据集\ndata <- data.frame(\n    id = seq(1, 60), # 生成1到60的id\n    individual = paste(\"Mister \", seq(1, 60), sep = \"\"), # 个体名称\n    value = sample(seq(10, 100), 60, replace = TRUE) # 随机生成数值\n)\n\n# ----- 下面部分为标签准备数据框 ---- #\n# 获取每个标签的名称和y轴位置\nlabel_data <- data\n\n# 计算每个标签的角度，使标签位于条形中心\nnumber_of_bar <- nrow(label_data)\nangle <- 90 - 360 * (label_data$id - 0.5) / number_of_bar # 减去0.5保证标签居中\n\n# 计算标签的对齐方式：右对齐或左对齐\n# 如果在图的左侧，当前角度小于-90，标签右对齐\nlabel_data$hjust <- ifelse(angle < -90, 1, 0)\n\n# 翻转角度，使标签可读\nlabel_data$angle <- ifelse(angle < -90, angle + 180, angle)\n# ----- -------------------------------------- ---- #\n\n# 开始绘图\np <- ggplot(data, aes(x = as.factor(id), y = value)) + # id需转为因子，保证首尾无空隙\n\n    # 添加条形，设置透明蓝色\n    geom_bar(stat = \"identity\", fill = alpha(\"skyblue\", 0.7)) +\n\n    # 设置y轴范围，负值控制内圆比例，正值用于条形高度\n    ylim(-100, 120) +\n\n    # 自定义主题：去除坐标轴标题和网格线\n    theme_minimal() +\n    theme(\n        axis.text = element_blank(), # 去除坐标轴文字\n        axis.title = element_blank(), # 去除坐标轴标题\n        panel.grid = element_blank(), # 去除网格线\n        plot.margin = unit(rep(-1, 4), \"cm\") # 调整边距，避免标签被截断\n    ) +\n\n    # 转换为极坐标\n    coord_polar(start = 0) +\n\n    # 添加标签，使用上面准备的label_data数据框\n    geom_text(\n        data = label_data,\n        aes(x = id, y = value + 10, label = individual, hjust = hjust),\n        color = \"black\",\n        fontface = \"bold\",\n        alpha = 0.6,\n        size = 2.5,\n        angle = label_data$angle,\n        inherit.aes = FALSE\n    )\n\np\n```\n\n::: {.cell-output-display}\n![带标签的极坐标条形图示例](cir-bar_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### gap\n\n末尾空白: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#| fig-cap: \"带间隔的极坐标条形图示例\"\n\n# 构造数据集\ndata <- data.frame(\n  individual=paste( \"Mister \", seq(1,60), sep=\"\"),\n  group=c( rep('A', 10), rep('B', 30), rep('C', 14), rep('D', 6)) ,\n  value=sample( seq(10,100), 60, replace=T)\n)\n\n# 设置空白条数量，用于在条形之间制造间隔\nempty_bar <- 10\n\n# 在原始数据集末尾添加空白行（NA），用于制造条形间隔\nto_add <- matrix(NA, empty_bar, ncol(data)) # 构造空白行矩阵\ncolnames(to_add) <- colnames(data)          # 设置列名与原数据一致\ndata <- rbind(data, to_add)                 # 合并原数据和空白行\ndata$id <- seq(1, nrow(data))               # 为每一行分配唯一id\n\n# 获取每个标签的名称和y轴位置\nlabel_data <- data\nnumber_of_bar <- nrow(label_data)           # 总条形数（含空白）\n# 计算每个标签的角度，使标签位于条形中心\nangle <- 90 - 360 * (label_data$id - 0.5) / number_of_bar # -0.5保证标签居中\n# 计算标签的对齐方式：右对齐或左对齐\nlabel_data$hjust <- ifelse(angle < -90, 1, 0)\n# 翻转角度，使标签可读\nlabel_data$angle <- ifelse(angle < -90, angle + 180, angle)\n\n# 绘制极坐标条形图\np <- ggplot(data, aes(x = as.factor(id), y = value)) + # id需转为因子，保证首尾无空隙\n    geom_bar(stat = \"identity\", fill = alpha(\"green\", 0.3)) + # 添加条形，设置透明绿色\n    ylim(-100, 120) +                                         # y轴范围，负值控制内圆比例\n    theme_minimal() +                                         # 极简主题\n    theme(\n        axis.text = element_blank(),                          # 去除坐标轴文字\n        axis.title = element_blank(),                         # 去除坐标轴标题\n        panel.grid = element_blank(),                         # 去除网格线\n        plot.margin = unit(rep(-1, 4), \"cm\")                  # 设置负边距，减少空白\n    ) +\n    coord_polar(start = 0) +                                  # 转换为极坐标\n    # 添加标签，使用上面准备的label_data数据框\n    geom_text(\n        data = label_data,\n        aes(x = id, y = value + 10, label = individual, hjust = hjust),\n        color = \"black\",\n        fontface = \"bold\",\n        alpha = 0.6,\n        size = 2.5,\n        angle = label_data$angle,\n        inherit.aes = FALSE\n    )\n\np\n```\n\n::: {.cell-output-display}\n![](cir-bar_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n组间空白\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 构造数据集\ndata <- data.frame(\n    individual = paste(\"Mister \", seq(1, 60), sep = \"\"), # 个体名称\n    group = as.factor(c(rep('A', 10), rep('B', 30), rep('C', 14), rep('D', 6))), # 分组变量（必须为因子）\n    value = sample(seq(10, 100), 60, replace = TRUE) # 随机生成数值\n)\n\n# 设置每组末尾添加的空白条数量，用于分隔分组\nempty_bar <- 4\nto_add <- data.frame(matrix(NA, empty_bar * nlevels(data$group), ncol(data))) # 构造空白行\ncolnames(to_add) <- colnames(data) # 设置空白行的列名与原数据一致\nto_add$group <- rep(levels(data$group), each = empty_bar) # 每组添加空白条\ndata <- rbind(data, to_add) # 合并数据和空白条\ndata <- data |> arrange(group) # 按分组排序（新管道写法）\ndata$id <- seq(1, nrow(data)) # 为每一行添加唯一id\n\n# 获取每个标签的名称和y轴位置\nlabel_data <- data\nnumber_of_bar <- nrow(label_data) # 总条形数（含空白）\n# 计算每个标签的角度，使标签位于条形中心\nangle <- 90 - 360 * (label_data$id - 0.5) / number_of_bar # -0.5保证标签居中\n# 计算标签的对齐方式：右对齐或左对齐\nlabel_data$hjust <- ifelse(angle < -90, 1, 0)\n# 翻转角度，使标签可读\nlabel_data$angle <- ifelse(angle < -90, angle + 180, angle)\n\n# 绘制极坐标条形图\np <- ggplot(data, aes(x = as.factor(id), y = value, fill = group)) + # id需转为因子，保证首尾无空隙\n    geom_bar(stat = \"identity\", alpha = 0.5) + # 添加条形，设置透明度\n    ylim(-100, 120) + # y轴范围，负值控制内圆比例\n    theme_minimal() + # 极简主题\n    theme(\n        legend.position = \"none\", # 不显示图例\n        axis.text = element_blank(), # 去除坐标轴文字\n        axis.title = element_blank(), # 去除坐标轴标题\n        panel.grid = element_blank(), # 去除网格线\n        plot.margin = unit(rep(-1, 4), \"cm\") # 设置负边距，减少空白\n    ) +\n    coord_polar() + # 转换为极坐标\n    # 添加标签，使用上面准备的label_data数据框\n    geom_text(\n        data = label_data,\n        aes(x = id, y = value + 10, label = individual, hjust = hjust),\n        color = \"black\",\n        fontface = \"bold\",\n        alpha = 0.6,\n        size = 2.5,\n        angle = label_data$angle,\n        inherit.aes = FALSE\n    )\n\np\n```\n\n::: {.cell-output-display}\n![带组间空白的极坐标条形图](cir-bar_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n### 排序\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 创建数据后用 data = data |> arrange(group, value) 排序\n\n# 构造数据集\ndata <- data.frame(\n  individual = paste(\"Mister \", seq(1, 60), sep = \"\"), # 个体名称\n  group = as.factor(c(rep('A', 10), rep('B', 30), rep('C', 14), rep('D', 6))), # 分组变量（必须为因子）\n  value = sample(seq(10, 100), 60, replace = TRUE) # 随机生成数值\n)\n\ndata = data |> arrange(group, value) # <-- 就是这里, 组内排序\n\n# 设置每组末尾添加的空白条数量，用于分隔分组\nempty_bar <- 4\nto_add <- data.frame(matrix(NA, empty_bar * nlevels(data$group), ncol(data))) # 构造空白行\ncolnames(to_add) <- colnames(data) # 设置空白行的列名与原数据一致\nto_add$group <- rep(levels(data$group), each = empty_bar) # 每组添加空白条\ndata <- rbind(data, to_add) # 合并数据和空白条\ndata <- data |> arrange(group) # 按分组排序（新管道写法）\ndata$id <- seq(1, nrow(data)) # 为每一行添加唯一id\n\n# 获取每个标签的名称和y轴位置\nlabel_data <- data\nnumber_of_bar <- nrow(label_data) # 总条形数（含空白）\n# 计算每个标签的角度，使标签位于条形中心\nangle <- 90 - 360 * (label_data$id - 0.5) / number_of_bar # -0.5保证标签居中\n# 计算标签的对齐方式：右对齐或左对齐\nlabel_data$hjust <- ifelse(angle < -90, 1, 0)\n# 翻转角度，使标签可读\nlabel_data$angle <- ifelse(angle < -90, angle + 180, angle)\n\n# 绘制极坐标条形图\np <- ggplot(data, aes(x = as.factor(id), y = value, fill = group)) + # id需转为因子，保证首尾无空隙\n    geom_bar(stat = \"identity\", alpha = 0.5) + # 添加条形，设置透明度\n    ylim(-100, 120) + # y轴范围，负值控制内圆比例\n    theme_minimal() + # 极简主题\n    theme(\n        legend.position = \"none\", # 不显示图例\n        axis.text = element_blank(), # 去除坐标轴文字\n        axis.title = element_blank(), # 去除坐标轴标题\n        panel.grid = element_blank(), # 去除网格线\n        plot.margin = unit(rep(-1, 4), \"cm\") # 设置负边距，减少空白\n    ) +\n    coord_polar() + # 转换为极坐标\n    # 添加标签，使用上面准备的label_data数据框\n    geom_text(\n        data = label_data,\n        aes(x = id, y = value + 10, label = individual, hjust = hjust),\n        color = \"black\",\n        fontface = \"bold\",\n        alpha = 0.6,\n        size = 2.5,\n        angle = label_data$angle,\n        inherit.aes = FALSE\n    )\n\np\n```\n\n::: {.cell-output-display}\n![带组间空白的极坐标条形图(排序)](cir-bar_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### 定制\n\n加入了刻度线和分组标记:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 构造数据集\ndata <- data.frame(\n  individual = paste(\"Mister \", seq(1, 60), sep = \"\"), # 个体名称\n  group = as.factor(c(rep('A', 10), rep('B', 30), rep('C', 14), rep('D', 6))), # 分组变量（必须为因子）\n  value = sample(seq(10, 100), 60, replace = TRUE) # 随机生成数值\n)\n\n\n# 设置每组末尾添加的空白条数量，用于分隔分组\nempty_bar <- 3\nto_add <- data.frame(matrix(NA, empty_bar * nlevels(data$group), ncol(data))) # 构造空白行\n\n\ncolnames(to_add) <- colnames(data) # 设置空白行的列名与原数据一致\nto_add$group <- rep(levels(data$group), each = empty_bar) # 每组添加空白条, each 不循环添加\ndata <- rbind(data, to_add) # 合并数据和空白条\ndata <- data |> arrange(group) # 按分组排序\ndata$id <- seq(1, nrow(data)) # 为每一行添加唯一id\n\n# 获取每个标签的名称和y轴位置\nlabel_data <- data\nnumber_of_bar <- nrow(label_data) # 总条形数（含空白）\n# 计算每个标签的角度，使标签位于条形中心\nangle <- 90 - 360 * (label_data$id - 0.5) / number_of_bar # -0.5保证标签居中\n# 计算标签的对齐方式：右对齐或左对齐\nlabel_data$hjust <- ifelse(angle < -90, 1, 0)\n# 翻转角度，使标签可读\nlabel_data$angle <- ifelse(angle < -90, angle + 180, angle)\n\n# 构造分组基线数据，用于分组底部的线和分组标签\nbase_data <- data |>\n  group_by(group) |>\n  summarize(start = min(id), end = max(id) - empty_bar) |>\n  rowwise() |>\n  mutate(title = mean(c(start, end)))\n\n# 构造网格线数据，用于绘制圆环上的刻度线\ngrid_data <- base_data\ngrid_data$end <- grid_data$end[c(nrow(grid_data), 1:nrow(grid_data) - 1)] + 1\ngrid_data$start <- grid_data$start - 1\ngrid_data <- grid_data[-1, ]\n\n# 绘制极坐标条形图\nggplot(data, aes(x = as.factor(id), y = value, fill = group)) + # id需转为因子，保证首尾无空隙\n\n  # 添加条形，设置透明度\n  geom_bar(\n    aes(x = as.factor(id), y = value, fill = group),\n    stat = \"identity\",\n    alpha = 0.5\n  ) + \n\n  # 添加圆环的刻度线（y=80/60/40/20）\n  geom_segment(\n    data = grid_data,\n    aes(x = end, y = 80, xend = start, yend = 80),\n    colour = \"grey\",\n    alpha = 1,\n    linewidth = 0.3,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(x = end, y = 60, xend = start, yend = 60),\n    colour = \"grey\",\n    alpha = 1,\n    linewidth = 0.3,\n    inherit.aes = FALSE\n  ) + \n  geom_segment(\n    data = grid_data,\n    aes(x = end, y = 40, xend = start, yend = 40),\n    colour = \"grey\",\n    alpha = 1,\n    linewidth = 0.3,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(x = end, y = 20, xend = start, yend = 20),\n    colour = \"grey\",\n    alpha = 1,\n    linewidth = 0.3,\n    inherit.aes = FALSE\n  ) +\n\n  # 添加刻度值文本\n  annotate(\n    \"text\",\n    x = rep(max(data$id), 4),\n    y = c(20, 40, 60, 80),\n    label = c(\"20\", \"40\", \"60\", \"80\"),\n    color = \"grey\",\n    size = 3,\n    angle = 0,\n    fontface = \"bold\",\n    hjust = 1\n  ) + \n\n  # 再次添加条形，保证条形在刻度线上方\n  geom_bar(\n    aes(x = as.factor(id), y = value, fill = group),\n    stat = \"identity\",\n    alpha = 0.5\n  ) +\n\n  ylim(-100, 120) + # y轴范围，负值控制内圆比例\n  theme_minimal() + # 极简主题\n  theme(\n    legend.position = \"none\", # 不显示图例\n    axis.text = element_blank(), # 去除坐标轴文字\n    axis.title = element_blank(), # 去除坐标轴标题\n    panel.grid = element_blank(), # 去除网格线\n    plot.margin = unit(rep(-1, 4), \"cm\") # 设置负边距，减少空白\n  ) + \n  coord_polar() +  # 转换为极坐标\n\n  # 添加标签，使用上面准备的label_data数据框\n  geom_text(\n    data = label_data,\n    aes(x = id, y = value + 10, label = individual, hjust = hjust),\n    color = \"black\",\n    fontface = \"bold\",\n    alpha = 0.6,\n    size = 2.5,\n    angle = label_data$angle,\n    inherit.aes = FALSE\n  ) + \n\n  # 添加分组底部基线\n  geom_segment(\n    data = base_data,\n    aes(x = start, y = -5, xend = end, yend = -5),\n    colour = \"black\",\n    alpha = 0.8,\n    linewidth = 0.6,\n    inherit.aes = FALSE\n  ) + \n  # 添加分组标签\n  geom_text(\n    data = base_data,\n    aes(x = title, y = -18, label = group),\n    hjust = c(1, 1, 0, 0),\n    colour = \"black\",\n    alpha = 0.8,\n    size = 4,\n    fontface = \"bold\",\n    inherit.aes = FALSE\n  )\n```\n\n::: {.cell-output-display}\n![带组间空白的极坐标条形图](cir-bar_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n## Pearl\n\n[![Hiking Locations in Washington](./image/washington.png)](https://r-graph-gallery.com/web-circular-barplot-with-R-and-ggplot2.html)\n\n\n[![环形棒棒糖图](./image/circular-lollipop.png)](https://r-graph-gallery.com/web-circular-lollipop-plot-with-ggplot2.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}