{
  "hash": "d420086b31761a8aeb173d1ecfe07e46",
  "result": {
    "engine": "knitr",
    "markdown": "# Edge bundling {#sec-edge-bundling}\n\n::: {callout-note}\nQuarto 渲染有bug，可以阅读:  \n[https://r-graph-gallery.com/hierarchical-edge-bundling.html](https://r-graph-gallery.com/hierarchical-edge-bundling.html)\n:::\n\n## PKG\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggraph) # 绘制网络图\nlibrary(igraph) # 处理网络图\n```\n:::\n\n\n## Introduction \n\n两种数据格式：\n\n::: {layout-ncol=2}\n\n![层次网络结构](./image/hierarchical_network_data.png){width=80%}\n\n![连接的邻接矩阵](./image/connection_data.png){width=95%}\n\n:::\n\n\n::: {.cell layout-ncol=\"1\"}\n\n```{.r .cell-code}\n# 创建一个数据框，给出个体层次结构。\n# 原点在最上面，然后是组，然后是子组\nd1 <- data.frame(\n  from = \"origin\",\n  to = paste(\"group\", seq(1, 10), sep = \"\")\n)\nd2 <- data.frame(\n  from = rep(d1$to, each = 10),\n  to = paste(\"subgroup\", seq(1, 100), sep = \"_\")\n)\n\n# 合并数据框\nhierarchy <- rbind(d1, d2)\n\n# 创建一个顶点数据框。每个对象一行，给出节点的特征。\nvertices <- data.frame(\n  name = unique(c(as.character(hierarchy$from), as.character(hierarchy$to)))\n)\n\n# 创建一个图对象\nmygraph <- graph_from_data_frame(hierarchy, vertices = vertices)\n\n# 绘制网络图\nplot(mygraph, vertex.label = \"\", edge.arrow.size = 0, vertex.size = 2)\n```\n\n::: {.cell-output-display}\n![层次网络结构](edge-bundling_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 用ggraph绘制网络图\nggraph(mygraph, layout = \"dendrogram\", circular = FALSE) +\n  geom_edge_link() + # 线连接\n  theme_void()\n```\n\n::: {.cell-output-display}\n![层次网络结构](edge-bundling_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# 用ggraph绘制网络图\nggraph(mygraph, layout = \"dendrogram\", circular = TRUE) +\n  geom_edge_diagonal() + # 对角线连接\n  theme_void()\n```\n\n::: {.cell-output-display}\n![层次网络结构](edge-bundling_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n:::\n\n\n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\n# left: 连接用直线表示\nggraph(mygraph, layout = \"dendrogram\", circular = TRUE) +\n  geom_edge_diagonal(alpha = 0.1) +\n  geom_conn_bundle(\n    data = get_con(from = c(18, 20, 30), to = c(19, 50, 70)),\n    alpha = 1,\n    width = 1,\n    colour = \"skyblue\",\n    tension = 0\n  ) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](edge-bundling_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# right: 使用bundle方法（tension = 1）\nggraph(mygraph, layout = \"dendrogram\", circular = TRUE) +\n  geom_edge_diagonal(alpha = 0.1) +\n  geom_conn_bundle(\n    data = get_con(from = c(18, 20, 30), to = c(19, 50, 70)),\n    alpha = 1,\n    width = 1,\n    colour = \"skyblue\",\n    tension = 1\n  ) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](edge-bundling_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\n## Color\n\n::: {layout-ncol=2}\n\n![edge-color-1](./image/edge-color-1.png)\n\n![edge-color-2](./image/edge-color-2.png)\n\n![edge-color-3](./image/edge-color-3.png)\n\n![edge-color-4](./image/edge-color-4.png)\n\n:::\n\n\n![edge-color-5](./image/edge-color-5.png){width=70%}\n![edge-color-6](./image/edge-color-6.png){width=70%}\n![edge-color-7](./image/edge-color-7.png){width=70%}\n\n\n\n## Label\n\n![](./image/edge-label.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}