{
  "hash": "ae87170b4b0557819953d7cde07bcf83",
  "result": {
    "engine": "knitr",
    "markdown": "# Group bar {#sec-group-bar}\n\n关于堆叠的讲解，见 [data-to-viz](https://www.data-to-viz.com/caveat/stacking.html)\n\n## PKG\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(RColorBrewer) # 加载RColorBrewer包用于调色板\nlibrary(tidyverse)\nlibrary(likert) # 加载likert包用于处理分组条形图\nlibrary(viridis) # 加载viridis包用于调色板\nlibrary(hrbrthemes) # 加载hrbrthemes包用于美化图形\n```\n:::\n\n\n## `ggplot2`\n\n### `dodge`\n\n分组条形图（并列 dodge）：\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 构建数据集\n# specie：物种名称，共4种，每种3个观测\nspecie <- c(\n  rep(\"sorgho\", 3),\n  rep(\"poacee\", 3),\n  rep(\"banana\", 3),\n  rep(\"triticum\", 3)\n)\n# condition：实验条件，共3种（normal、stress、Nitrogen），每种物种下各有3个条件\ncondition <- rep(c(\"normal\", \"stress\", \"Nitrogen\"), 4)\n# value：生成12个服从正态分布的随机数，取绝对值作为观测值\nvalue <- abs(rnorm(12, 0, 15))\n# 将数据整合为数据框\ndata <- data.frame(specie, condition, value)\n\n# 绘制分组条形图\nggplot(data, aes(fill = condition, y = value, x = specie)) +\n  geom_bar(position = \"dodge\", stat = \"identity\") + # position=\"dodge\"并列\n  scale_fill_brewer(palette = \"Set2\") + # 颜色\n  theme_minimal() + # 使用简洁主题\n  theme(legend.position = \"bottom\") # 图例位置在底部\n```\n\n::: {.cell-output-display}\n![分组条形图（并列）：展示不同物种在不同条件下的数值分布](group-bar_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n### `stack`\n\n分组条形图（堆叠 stack）：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(fill = condition, y = value, x = specie)) +\n  geom_bar(position = \"stack\", stat = \"identity\") + # position=\"stack\"堆叠\n  scale_fill_brewer(palette = \"Set2\") + # 颜色\n  theme_minimal() + # 使用简洁主题\n  theme(legend.position = \"bottom\") # 图例位置在底部\n```\n\n::: {.cell-output-display}\n![分组条形图(堆叠)：展示不同物种在不同条件下的数值分布](group-bar_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### `fill`\n\n分组条形图（百分比堆叠 fill）：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(fill=condition, y=value, x=specie)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + # position=\"fill\"百分比堆叠\n  scale_fill_brewer(palette = \"Set2\") + # 颜色\n  theme_minimal() + # 使用简洁主题\n  theme(legend.position = \"bottom\") # 图例位置在底部\n```\n\n::: {.cell-output-display}\n![分组条形图（百分比堆叠）：展示不同物种在不同条件下的数值分布](group-bar_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n### 定制\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用ggplot2绘制分组条形图（堆叠形式）\nggplot(data, aes(fill = condition, y = value, x = specie)) +\n    geom_bar(position = \"stack\", stat = \"identity\") +     # 堆叠条形图\n    scale_fill_viridis(discrete = TRUE) +   # 使用viridis调色板，提升色盲友好性\n    ggtitle(\"Studying 4 species..\") +      # 添加主标题\n    theme_ipsum() +        # 使用hrbrthemes包的ipsum主题美化图形\n    xlab(\"\")               # 去除x轴标签\n```\n\n::: {.cell-output-display}\n![使用viridis调色板和hrbrthemes美化的分组条形图（堆叠）](group-bar_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### 分面\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用ggplot2绘制分组条形图（分面显示每个物种）\nggplot(data, aes(fill = condition, y = value, x = condition)) + \n    geom_bar(position = \"dodge\", stat = \"identity\") + # position=\"dodge\"并列条形\n    scale_fill_viridis(discrete = TRUE, option = \"E\") + # 使用viridis调色板，提升色盲友好性\n    ggtitle(\"Studying 4 species..\") + # 添加主标题\n    facet_wrap(~specie) + # 按物种分面显示，每个物种一个子图\n    theme_ipsum() + # 使用hrbrthemes包的ipsum主题美化图形\n    theme(legend.position = \"none\") + # 不显示图例\n    xlab(\"\") # 去除x轴标签\n```\n\n::: {.cell-output-display}\n![分组条形图（分面）：展示不同物种在不同条件下的数值分布](group-bar_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n### 负值\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 构建数据集\ndata <- tribble(\n  ~x, ~groupA, ~groupB, ~groupC, ~groupD,\n  \"Jan\",   12,     19,     -9,      2,\n  \"Feb\",   16,     21,    -13,      8,\n  \"Mar\",   23,     21,    -24,      9,\n  \"Apr\",   38,     34,     25,     23,\n  \"May\",   42,     46,     34,     26,\n  \"Jun\",   34,     42,     32,     26,\n  \"Jul\",    2,     34,     21,     27,\n  \"Aug\",   21,     32,    -16,     18,\n  \"Sept\",  18,     31,    -18,     12,\n  \"Oct\",   12,     21,    -14,     10,\n  \"Nov\",   12,     18,    -14,     10,\n  \"Dec\",    2,      8,      4,     10\n)\n# 长数据\ndata_long <- data |>\n  pivot_longer(\n    -x,\n    names_to = \"group\",\n    values_to = \"value\"\n  ) |>\n  mutate(\n    x = factor(\n      x,\n      levels = c(\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sept\",\n        \"Oct\"\n      )\n    )\n  )\n\n# 绘制分组条形图（堆叠形式）\nggplot(data_long, aes(fill = group, y = value, x = x)) +\n  geom_bar(position = \"stack\", stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![分组条形图（负值）：展示不同组别在不同条件下的数值分布](group-bar_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## `Base R`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 设置随机种子，保证每次生成的数据一致\nset.seed(112)\n# 生成一个3行5列的矩阵，元素为1到30之间的随机整数\ndata <- matrix(sample(1:30, 15), nrow = 3)\ncolnames(data) <- c(\"A\", \"B\", \"C\", \"D\", \"E\")\nrownames(data) <- c(\"var1\", \"var2\", \"var3\")\n\n# 绘制分组条形图\nbarplot(\n    data, \n    col = colors()[c(23, 89, 12)], # 设置每个变量的颜色\n    border = \"white\",              # 条形边框为白色\n    font.axis = 2,                 # 坐标轴字体加粗\n    beside = TRUE,                 # 分组显示条形\n    legend = rownames(data),       # 添加图例，显示变量名\n    xlab = \"group\",                # x轴标签\n    font.lab = 2                   # 坐标轴标签加粗\n)\n```\n\n::: {.cell-output-display}\n![分组条形图：展示三个变量在五个分组下的数值分布](group-bar_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 绘制堆叠分组条形图\nbarplot(\n    data, \n    col = colors()[c(23, 89, 12)], # 设置每个变量的颜色\n    border = \"white\",              # 条形边框为白色\n    space = 0.04,                  # 分组之间的间隔\n    font.axis = 2,                 # 坐标轴字体加粗\n    xlab = \"group\"                 # x轴标签\n)\n```\n\n::: {.cell-output-display}\n![分组条形图（堆叠形式）：展示三个变量在五个分组下的数值分布](group-bar_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 加载RColorBrewer包用于调色板\nlibrary(RColorBrewer)\n\n# 创建3种Pastel2配色方案的颜色\ncoul <- brewer.pal(3, \"Pastel2\") \n\n# 将原始数据转换为百分比形式\n# 对每一列（每个分组）进行处理，使每个变量的数值占该分组总和的百分比\ndata_percentage <- apply(\n    data, \n    2,  # 按列处理\n    function(x) { x * 100 / sum(x, na.rm = TRUE) }\n)\n\n# 绘制百分比堆叠条形图\nbarplot(\n    data_percentage,         # 百分比数据\n    col = coul,              # 设置颜色\n    border = \"white\",        # 条形边框为白色\n    xlab = \"group\"           # x轴标签\n)\n```\n\n::: {.cell-output-display}\n![分组条形图（百分比堆叠形式）：展示三个变量在五个分组下的百分比分布](group-bar_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n`Likert` 量表分组条形图: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 加载likert包，用于处理Likert量表数据\nlibrary(likert)\n\n# 使用likert包自带的数据集pisaitems\ndata(pisaitems)\n\n# 从pisaitems数据集中筛选变量名以\"ST24Q\"开头的题目，作为Likert量表条目\nitems28 <- pisaitems[, substr(names(pisaitems), 1, 5) == \"ST24Q\"]\n\n# 构建Likert对象，对Likert量表数据进行汇总和处理\np <- likert(items28)\n\nplot(p)\n```\n\n::: {.cell-output-display}\n![Likert量表分组条形图：展示学生对ST24Q相关问题的态度分布](group-bar_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## Circular\n\n极坐标形式的分组堆叠条形图\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # 数据处理和可视化\nlibrary(viridis) # 色盲友好的调色板\n\n# 构建数据集\ndata <- data.frame(\n  individual = paste(\"Mister \", seq(1, 60), sep = \"\"), # 60个个体\n  group = factor(c(rep('A', 10), rep('B', 30), rep('C', 14), rep('D', 6))), # 分为4组\n  value1 = sample(seq(10, 100), 60, replace = T), # 观测1\n  value2 = sample(seq(10, 100), 60, replace = T), # 观测2\n  value3 = sample(seq(10, 100), 60, replace = T) # 观测3\n)\n\n# 转换为长数据格式，便于ggplot绘图\ndata <- data |>\n  pivot_longer(\n    cols = value1:value3,\n    names_to = \"observation\",\n    values_to = \"value\"\n  )\n\n# 设置每组后面添加的空白条数，使分组更明显\nempty_bar <- 2\nnObsType <- nlevels(as.factor(data$observation)) # 观测类型数\nto_add <- data.frame(matrix(\n  NA,\n  empty_bar * nlevels(data$group) * nObsType,\n  ncol(data)\n))\ncolnames(to_add) <- colnames(data)\nto_add$group <- rep(levels(data$group), each = empty_bar * nObsType)\ndata <- rbind(data, to_add)\ndata <- data |> arrange(group, individual)\ndata$id <- rep(seq(1, nrow(data) / nObsType), each = nObsType) # 为每个个体分配唯一id,作为X轴\n\n# 计算每个标签的总值和角度，用于后续标签显示\nlabel_data <- data |> group_by(id, individual) |> summarize(tot = sum(value))\nnumber_of_bar <- nrow(label_data)\nangle <- 90 - 360 * (label_data$id - 0.5) / number_of_bar # 计算标签角度\nlabel_data$hjust <- ifelse(angle < -90, 1, 0) # 标签对齐方式\nlabel_data$angle <- ifelse(angle < -90, angle + 180, angle) # 角度调整\n\n# 计算每组的起止位置，用于分组底线和分组标签\nbase_data <- data |>\n  group_by(group) |>\n  summarize(start = min(id), end = max(id) - empty_bar) |>\n  rowwise() |>\n  mutate(title = mean(c(start, end)))\n\n# 计算分组之间的网格线位置\ngrid_data <- base_data\ngrid_data$end <- grid_data$end[c(nrow(grid_data), 1:nrow(grid_data) - 1)] + 1\ngrid_data$start <- grid_data$start - 1\ngrid_data <- grid_data[-1, ]\n\n# 绘制极坐标分组条形图\nggplot(data) +\n  # 堆叠条形\n  geom_bar(\n    aes(x = as.factor(id), y = value, fill = observation),\n    stat = \"identity\",\n    alpha = 0.5\n  ) +\n  scale_fill_viridis(discrete = TRUE) + # 使用viridis调色板\n\n  # 添加网格线（0/50/100/150/200）\n  geom_segment(\n    data = grid_data,\n    aes(x = end, y = 0, xend = start, yend = 0),\n    colour = \"grey\",\n    alpha = 1,\n    linewidth = 0.3,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(x = end, y = 50, xend = start, yend = 50),\n    colour = \"grey\",\n    alpha = 1,\n    linewidth = 0.3,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(x = end, y = 100, xend = start, yend = 100),\n    colour = \"grey\",\n    alpha = 1,\n    linewidth = 0.3,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(x = end, y = 150, xend = start, yend = 150),\n    colour = \"grey\",\n    alpha = 1,\n    linewidth = 0.3,\n    inherit.aes = FALSE\n  ) +\n  geom_segment(\n    data = grid_data,\n    aes(x = end, y = 200, xend = start, yend = 200),\n    colour = \"grey\",\n    alpha = 1,\n    linewidth = 0.3,\n    inherit.aes = FALSE\n  ) +\n\n  # 添加网格线数值标签\n  ggplot2::annotate(\n    \"text\",\n    x = rep(max(data$id), 5),\n    y = c(0, 50, 100, 150, 200),\n    label = c(\"0\", \"50\", \"100\", \"150\", \"200\"),\n    color = \"grey\",\n    size = 6,\n    angle = 0,\n    fontface = \"bold\",\n    hjust = 1\n  ) +\n\n  ylim(-150, max(label_data$tot, na.rm = T)) + # y轴范围\n  theme_minimal() +\n  theme(\n    legend.position = \"none\", # 不显示图例\n    axis.text = element_blank(), # 不显示坐标轴文本\n    axis.title = element_blank(), # 不显示坐标轴标题\n    panel.grid = element_blank(), # 不显示面板网格\n    plot.margin = unit(rep(-1, 4), \"cm\") # 缩小图形边距\n  ) +\n  coord_polar() + # 极坐标变换\n\n  # 添加每个个体的标签\n  geom_text(\n    data = label_data,\n    aes(x = id, y = tot + 10, label = individual, hjust = hjust),\n    color = \"black\",\n    fontface = \"bold\",\n    alpha = 0.6,\n    size = 5,\n    angle = label_data$angle,\n    inherit.aes = FALSE\n  ) +\n\n  # 添加分组底线\n  geom_segment(\n    data = base_data,\n    aes(x = start, y = -5, xend = end, yend = -5),\n    colour = \"black\",\n    alpha = 0.8,\n    size = 0.6,\n    inherit.aes = FALSE\n  ) +\n  # 添加分组标签\n  geom_text(\n    data = base_data,\n    aes(x = title, y = -18, label = group),\n    hjust = c(1, 1, 0, 0),\n    colour = \"black\",\n    alpha = 0.8,\n    size = 4,\n    fontface = \"bold\",\n    inherit.aes = FALSE\n  )\n```\n\n::: {.cell-output-display}\n![分组条形图（极坐标形式）](group-bar_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}