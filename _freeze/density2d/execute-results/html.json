{
  "hash": "6a14cb94fe90bc5e1c19d3330878257e",
  "result": {
    "engine": "knitr",
    "markdown": "# Density 2D {#sec-density2d}\n\n用来显示两个数值变量之间的关系, 把数值分箱后计算观测数量, 有不同类型的形状:\n\n![不同类型的二维密度图](./image/density2d.png)\n\n## PKG\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(patchwork)      # 用于组合多个图形\nlibrary(hexbin)         # 用于六边形分箱\nlibrary(RColorBrewer)   # 用于调色板\n```\n:::\n\n\n\n## 点图的问题\n\n点太多的时候难以看清信息,黑乎乎一片(或许加上透明度能好一点): \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 生成三组二维正态分布的数据，每组20000个点,3个群体\na <- data.frame(x = rnorm(20000, 10, 1.9), y = rnorm(20000, 10, 1.2))    # 第一组，均值为10\nb <- data.frame(x = rnorm(20000, 14.5, 1.9), y = rnorm(20000, 14.5, 1.9)) # 第二组，均值为14.5\nc <- data.frame(x = rnorm(20000, 9.5, 1.9), y = rnorm(20000, 15.5, 1.9))  # 第三组，x均值9.5，y均值15.5\n\n# 合并三组数据\ndata <- rbind(a, b, c)\n\n# 绘制基础散点图，展示所有数据点的分布情况\nggplot(data, aes(x = x, y = y)) +\n    geom_point()\n```\n\n::: {.cell-output-display}\n![基础散点图,3个群体,由于点太多而看不清](density2d_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n## `geom_bin2d()`\n\n### 基础\n\n`ggplot2::geom_bin2d()` 是一个用于绘制二维直方图的函数, 它将数据分成网格, 并计算每个网格中的点数, 通过颜色深浅来表示点的分布.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = x, y = y)) +\n  geom_bin2d() +\n  ggtitle(\"geom_bin2d() with default\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![使用默认geom_bin2d绘制二维密度图](density2d_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n### `bins`\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = x, y = y)) +\n  geom_bin2d(bins = 70) +\n  scale_fill_continuous(type = \"viridis\") + # 使用viridis色彩映射\n  ggtitle(\"geom_bin2d() with bins = 70\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![通过bins参数控制箱的数量](density2d_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### 叠加散点图\n\n散点图可以叠加在 2D 密度图之上:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 生成示例数据，x和y分别为1到100的序列加上正态噪声\nsample_data <- data.frame(\n    x_values = 1:100 + rnorm(100, sd = 20),  # x轴数据，添加标准差为20的正态噪声\n    y_values = 1:100 + rnorm(100, sd = 27)   # y轴数据，添加标准差为27的正态噪声\n)\n\n# 绘图\nggplot(sample_data, aes(x_values, y_values)) +\n    # 绘制二维密度的栅格图，fill映射到密度值，不显示等高线\n    stat_density_2d(\n        geom = \"tile\", \n        aes(fill = ..density..), \n        contour = FALSE\n    ) +\n    # 叠加白色散点图，突出每个观测点\n    geom_point(colour = \"white\")\n```\n\n::: {.cell-output-display}\n![使用stat_density2d绘制二维密度图并叠加散点图](density2d_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## `geom_hex()`\n\n### 基础\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用默认geom_hex()绘制二维密度图\nggplot(data, aes(x = x, y = y)) +\n  geom_hex() +\n  ggtitle(\"geom_hex() with default\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![基础六角二位密度图geom_hex()](density2d_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = x, y = y)) +\n  geom_hex(bins = 70) +\n  scale_fill_continuous(type = \"viridis\") + # 使用viridis色彩映射\n  ggtitle(\"geom_hex() with bins = 70\") +\n  theme_bw() \n```\n\n::: {.cell-output-display}\n![通过bins参数控制箱的数量](density2d_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## `geom_density_2d()`\n\n`stat_density_2d()` 与 `stat_density_2d()` 可以绘制二维密度图\n\n### 基础\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 仅显示二维密度的等高线\np1 <- ggplot(data, aes(x = x, y = y)) +\n    geom_density_2d()\n\n# 仅显示密度区域\np2 <- ggplot(data, aes(x = x, y = y)) +\n    stat_density_2d(aes(fill = ..level..), geom = \"polygon\")\n\n# 同时显示密度区域和等高线\np3 <- ggplot(data, aes(x = x, y = y)) +\n    stat_density_2d(aes(fill = ..level..), geom = \"polygon\", colour = \"white\")\n\n# 使用raster方式显示密度\np4 <- ggplot(data, aes(x = x, y = y)) +\n    stat_density_2d(\n        aes(fill = ..density..), # 填充颜色映射到密度值\n        geom = \"raster\",         # 使用栅格图层\n        contour = FALSE          # 不显示等高线\n    ) +\n    scale_x_continuous(expand = c(0, 0)) + # 去除x轴边距\n    scale_y_continuous(expand = c(0, 0)) + # 去除y轴边距\n    theme(legend.position = 'none')        # 不显示图例\n\np1 + p2 + p3 + p4 + plot_layout(ncol = 2) \n```\n\n::: {.cell-output-display}\n![geom_density_2d()](density2d_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n### Palette\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用数字索引选择调色板, direction = -1 反转调色方向\nggplot(data, aes(x = x, y = y)) +\n    stat_density_2d(aes(fill = ..density..), geom = \"raster\", contour = FALSE) + # 绘制二维密度的栅格图\n    scale_fill_distiller(palette = 4, direction = -1) + # palette=4表示第4个内置调色板, direction=-1表示反转色阶\n    scale_x_continuous(expand = c(0, 0)) + # 去除x轴边距\n    scale_y_continuous(expand = c(0, 0)) + # 去除y轴边距\n    theme(legend.position = 'none')\n```\n\n::: {.cell-output-display}\n![使用数字索引选择调色板, direction = -1 反转调色方向](density2d_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用数字索引选择调色板, direction = 1 保持默认方向\nggplot(data, aes(x = x, y = y)) +\n    stat_density_2d(aes(fill = ..density..), geom = \"raster\", contour = FALSE) +\n    scale_fill_distiller(palette = 4, direction = 1) + # direction=1为默认方向\n    scale_x_continuous(expand = c(0, 0)) +\n    scale_y_continuous(expand = c(0, 0)) +\n    theme(legend.position = 'none')\n```\n\n::: {.cell-output-display}\n![使用数字索引选择调色板, direction = 1 保持默认方向](density2d_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用调色板名称调用,如\"Spectral\"\nggplot(data, aes(x = x, y = y)) +\n    stat_density_2d(aes(fill = ..density..), geom = \"raster\", contour = FALSE) +\n    scale_fill_distiller(palette = \"Spectral\", direction = 1) + # palette参数直接指定调色板名称\n    scale_x_continuous(expand = c(0, 0)) +\n    scale_y_continuous(expand = c(0, 0)) +\n    theme(legend.position = 'none')\n```\n\n::: {.cell-output-display}\n![使用调色板名称调用,如Spectral](density2d_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## `hexbin`\n\n使用 `hexbin` 和 `RColorBrewer` 绘制基础六边形二维密度图: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# library(hexbin)         # 用于六边形分箱\n# library(RColorBrewer)   # 用于调色板\n\n# 生成数据：x和y分别为正态分布，均值分别为1.5和1.6，共5000个点\nx <- rnorm(mean = 1.5, 5000)\ny <- rnorm(mean = 1.6, 5000)\n\n# 进行六边形分箱，xbins控制六边形的数量\nbin <- hexbin(x, y, xbins = 40)\n\n# 生成颜色映射，使用Spectral调色板并反转\nmy_colors = colorRampPalette(rev(brewer.pal(11, 'Spectral')))\n\n# 绘制六边形二维密度图，不显示主标题和图例\nplot(bin, main = \"\", colramp = my_colors, legend = FALSE)\n```\n\n::: {.cell-output-display}\n![使用hexbin包和RColorBrewer绘制基础六边形二维密度图](density2d_files/figure-html/unnamed-chunk-12-1.png){width=768}\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}