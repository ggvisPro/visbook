{
  "hash": "be8c7bab710a48deb20687ef3b1f540e",
  "result": {
    "engine": "knitr",
    "markdown": "# Boxplot {#sec-boxplot}\n\n## PKG\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(hrbrthemes) # hrbrthemes 提供了更适合排版的主题\nlibrary(viridis) # viridis 提供了好看的色盲友好型颜色\nlibrary(ggdist) # ggdist 提供了半小提琴图和云雨图\nlibrary(patchwork) # patchwork 用于图形拼接\nlibrary(ggExtra) # ggExtra 用于 ggplot2 散点图的边际图\n```\n:::\n\n\n\n## 箱线图陷阱 {#sec-boxplot-trap}\n\n箱线图又叫盒须图，展示数据的中位数(median)、上下四分位数(Quartiles)、四分位距(IQR)、须线(Whiskers)和异常值(outlier)。\n\n这是说明箱线图构成的示意图：\n![*R for data science* 对箱线图的介绍](./image/boxplot_explanation_2.png)\n![r-graph-gallery 对箱线图的介绍](./image/boxplot_explanation_1.png)\n\n但是，r-graph-gallery 这个图的上下须比例不太对，我用 `Base R` 重新画了一个：\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# --- 1. 参数设置 ---\n# par(bg = \"#eff8fc\") # 背景\n\n# 创建一个空白的绘图区域\nplot(\n    NA,\n    xlim = c(-45, 145),\n    ylim = c(2, 8),\n    axes = FALSE,\n    xlab = \"\",\n    ylab = \"\"\n)\n\n# --- 2. 定义箱形图的统计值和位置 ---\ny_center <- 5 # 图形在Y轴上的中心位置\nbox_height <- 2 # 箱体的高度\ntext_color <- \"#000000\" # 文本和箭头的颜色\n\n# 定义关键的统计数值\nq1 <- 35 # 第1四分位数 (Q1)\nmedian_val <- 50 # 中位数 (Q2)\nq3 <- 65 # 第3四分位数 (Q3)\niqr <- q3 - q1 # 四分位距 (IQR)\n\n# 根据IQR定义须的末端位置（内限）\nwhisker_low <- q1 - 1.5 * iqr\nwhisker_high <- q3 + 1.5 * iqr\n\n# 定义一些离群点 (outliers)\noutliers_low <- whisker_low - c(8, 12, 15)\noutliers_high <- whisker_high + c(8, 12, 15)\n\n# --- 3. 绘制图形元素 ---\n# 绘制箱体 (Box)\nrect(\n    q1,\n    y_center - box_height / 2,\n    q3,\n    y_center + box_height / 2,\n    border = \"red\",\n    lwd = 3\n)\n\n# 绘制中位数线\nsegments(\n    median_val,\n    y_center - box_height / 2,\n    median_val,\n    y_center + box_height / 2,\n    col = \"red\",\n    lwd = 3\n)\n\n# 绘制上下须 (Whiskers)\nsegments(whisker_low, y_center, q1, y_center, col = \"red\", lwd = 3)\nsegments(q3, y_center, whisker_high, y_center, col = \"red\", lwd = 3)\n\n# 绘制离群点\npoints(c(outliers_low, outliers_high), rep(y_center, 6), pch = 19, col = \"red\")\n\n# --- 4. 添加注解和箭头 ---\n# 中位数 (Median)\narrows(\n    x0 = median_val,\n    y0 = y_center + 2,\n    x1 = median_val,\n    y1 = y_center + box_height / 2 + 0.1,\n    col = text_color,\n    length = 0.1\n)\ntext(\n    x = median_val,\n    y = y_center + 2.5,\n    labels = \"Median\\n(Q2)\",\n    col = text_color\n)\n\n# Q1\narrows(\n    x0 = q1 - 10,\n    y0 = y_center + 2,\n    x1 = q1,\n    y1 = y_center + box_height / 2 + 0.1,\n    col = text_color,\n    length = 0.1\n)\ntext(\n    x = q1 - 10,\n    y = y_center + 2.5,\n    labels = \"25th Percentile \\n (Q1)\",\n    col = text_color\n)\n\n# Q3\narrows(\n    x0 = q3 + 10,\n    y0 = y_center + 2,\n    x1 = q3,\n    y1 = y_center + box_height / 2 + 0.1,\n    col = text_color,\n    length = 0.1\n)\ntext(\n    x = q3 + 10,\n    y = y_center + 2.5,\n    labels = \"75th Percentile \\n (Q3)\",\n    col = text_color\n)\n\n# 四分位距 (IQR)\nsegments(\n    x0 = q1,\n    y0 = y_center - 1.5,\n    x1 = q3,\n    y1 = y_center - 1.5,\n    col = \"red\",\n    lwd = 1.5\n)\ntext(\n    x = (q1 + q3) / 2,\n    y = y_center - 2,\n    labels = \"Interquartile Range\\n(IQR)\",\n    col = text_color\n)\n\n# 左侧离群点\narrows(\n    x0 = mean(outliers_low) + 1,\n    y0 = y_center - 1,\n    x1 = outliers_low[2],\n    y1 = y_center - 0.15,\n    col = text_color,\n    length = 0.1\n)\narrows(\n    x0 = mean(outliers_low) + 1,\n    y0 = y_center - 1,\n    x1 = outliers_low[1],\n    y1 = y_center - 0.15,\n    col = text_color,\n    length = 0.1\n)\narrows(\n    x0 = mean(outliers_low) + 1,\n    y0 = y_center - 1,\n    x1 = outliers_low[3],\n    y1 = y_center - 0.15,\n    col = text_color,\n    length = 0.1\n)\ntext(\n    mean(outliers_low) + 1,\n    y_center - 1.3,\n    \"Potential\\nOutliers\",\n    col = text_color\n)\n\n# 右侧离群点\narrows(\n    x0 = mean(outliers_high) - 1,\n    y0 = y_center - 1,\n    x1 = outliers_high[2],\n    y1 = y_center - 0.15,\n    col = text_color,\n    length = 0.1\n)\narrows(\n    x0 = mean(outliers_high) - 1,\n    y0 = y_center - 1,\n    x1 = outliers_high[1],\n    y1 = y_center - 0.15,\n    col = text_color,\n    length = 0.1\n)\narrows(\n    x0 = mean(outliers_high) - 1,\n    y0 = y_center - 1,\n    x1 = outliers_high[3],\n    y1 = y_center - 0.15,\n    col = text_color,\n    length = 0.1\n)\ntext(\n    mean(outliers_high) - 1,\n    y_center - 1.3,\n    \"Potential\\nOutliers\",\n    col = text_color\n)\n\n# 最小值标签 (Whisker end)\narrows(\n    x0 = whisker_low,\n    y0 = y_center - 2,\n    x1 = whisker_low,\n    y1 = y_center - 0.15,\n    col = text_color,\n    length = 0.1\n)\ntext(\n    x = whisker_low,\n    y = y_center - 2.5,\n    labels = \"Minimum \\n (Minimum Value in the Data, Q1 – 1.5*IQR)\",\n    col = text_color\n)\n\n# 最大值标签 (Whisker end)\narrows(\n    x0 = whisker_high,\n    y0 = y_center - 2,\n    x1 = whisker_high,\n    y1 = y_center - 0.15,\n    col = text_color,\n    length = 0.1\n)\ntext(\n    whisker_high,\n    y_center - 2.5,\n    \"Maximum \\n (Maximum Value in the Data, Q3 + 1.5*IQR)\",\n    col = text_color\n)\n\n# 数据中的真实最小值\narrows(\n    x0 = min(outliers_low),\n    y0 = y_center + 2,\n    x1 = min(outliers_low),\n    y1 = y_center + 0.15,\n    col = text_color,\n    length = 0.1\n)\ntext(\n    x = min(outliers_low),\n    y = y_center + 2.5,\n    labels = \"Minimum Value \\n in the Data\",\n    col = text_color\n)\n\n# 数据中的真实最大值\narrows(\n    x0 = max(outliers_high),\n    y0 = y_center + 2,\n    x1 = max(outliers_high),\n    y1 = y_center,\n    col = text_color,\n    length = 0.1\n)\ntext(\n    x = max(outliers_high),\n    y = y_center + 2.5,\n    labels = \"Maximum Value \\n in the Data\",\n    col = text_color\n)\n```\n\n::: {.cell-output-display}\n![箱线图的构成 (由 `Base R` 绘制)](boxplot_files/figure-html/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n但是，这种信息的总结也有个大问题——**无法显示数据的分布情况**。例如：正态分布可能看起来与双峰分布完全相同。因此，考虑用小提琴图或脊线图。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 创建数据集\ndata1 <- data.frame(\n    name = c(\n        rep(\"A\", 500),\n        rep(\"B\", 250),\n        rep(\"B\", 250),\n        rep(\"C\", 20),\n        rep(\"D\", 100)\n    ),\n    value = c(\n        rnorm(500, 10, 5),\n        rnorm(250, 13, 1),\n        rnorm(250, 18, 1),\n        rnorm(20, 25, 4),\n        rnorm(100, 12, 1)\n    )\n)\n\ndata1 |>\n    ggplot(aes(x = name, y = value, fill = name)) +\n    geom_boxplot() +\n    scale_fill_viridis(discrete = TRUE) + # 好看的色盲友好型颜色,离散变量\n    theme_ipsum() +\n    theme(legend.position = \"none\") +\n    labs(x = \"\") +\n    ggtitle(\"A somewhat misleading boxplot\")\n```\n\n::: {.cell-output-display}\n![](boxplot_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## 改进\n\n### 添加抖动(Jitter)\n\n适合数据量不太大的情况\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1 |>\n    ggplot(aes(x = name, y = value, fill = name)) +\n    geom_boxplot() +\n    scale_fill_viridis(discrete = TRUE) + # 好看的色盲友好型颜色,离散变量\n    geom_jitter(color = \"grey\", size = 0.5, alpha = 0.5) +\n    theme_ipsum() +\n    theme(legend.position = \"none\") +\n    labs(x = \"\") +\n    ggtitle(\"A boxplot with jitter\")\n```\n\n::: {.cell-output-display}\n![添加抖动(jitter)的箱线图](boxplot_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n发现:\n\n- 组 C 样本量小。在得出组 C 的值高于其他组的结论之前，要考虑样本量.\n\n- 组 B 呈现出双峰分布(y = 18 和 y = 13),但是箱线图中看起来和组 A 并无区别.\n\n### 小提琴图(Violin)\n\n::: {.cell}\n\n```{.r .cell-code}\n# 显示样本量\nsample_size <- data1 |>\n    group_by(name) |>\n    summarize(num = n())\n\ndata1 |>\n    left_join(sample_size) |>\n    mutate(myaxis = paste0(name, \"\\n\", \"n=\", num)) |>\n    ggplot(aes(x = myaxis, y = value, fill = name)) +\n    geom_violin(width = 1.4) +\n    geom_boxplot(width = 0.1, color = \"grey\", alpha = 0.2) +\n    scale_fill_viridis(discrete = TRUE) +\n    theme_ipsum() +\n    theme(legend.position = \"none\") +\n    labs(x = \"\") +\n    ggtitle(\"A violin plot\")\n```\n\n::: {.cell-output-display}\n![](boxplot_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### 云雨图(Raincloud)\n\n看了就知道,云(半小提琴)+雨(散点)的组合。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1 |>\n    ggplot(aes(x = factor(name), y = value, fill = factor(name))) +\n\n    # 添加半小提琴图（显示分布）\n    stat_halfeye(\n        adjust = 0.5,\n        justification = -0.1,\n        .width = 0,\n        point_colour = NA\n    ) +\n\n    # 添加散点（显示原始数据点）\n    stat_dots(\n        side = \"left\",\n        justification = 1.1,\n        binwidth = 0.25\n    ) +\n\n    # 设置色盲友好型配色\n    scale_fill_viridis(discrete = TRUE) +\n    theme_ipsum() +\n    theme(legend.position = \"none\") +\n    labs(x = \"\") +\n    ggtitle(\"A raincloud plot example\")\n```\n\n::: {.cell-output-display}\n![](boxplot_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n把**头顺时针旋转90度**(或交换R代码X轴和Y轴)，就更像云雨了\n\n甚至还可以再加上箱线图\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1 |>\n    ggplot(aes(x = factor(name), y = value, fill = factor(name))) +\n\n    # 添加半小提琴图（显示分布）\n    stat_halfeye(\n        adjust = 0.5,\n        justification = -0.2,\n        .width = 0,\n        point_colour = NA\n    ) +\n\n    # 添加箱线图\n    geom_boxplot(\n        width = 0.12,\n        outlier.color = NA,\n        alpha = 0.5\n    ) +\n\n    # 添加散点（显示原始数据点）\n    stat_dots(\n        side = \"left\",\n        justification = 1.1,\n        binwidth = 0.25\n    ) +\n\n    # 设置色盲友好型配色\n    scale_fill_viridis(discrete = TRUE) +\n    theme_ipsum() +\n    theme(legend.position = \"none\") +\n    labs(x = \"\") +\n    ggtitle(\"A raincloud plot example\")\n```\n\n::: {.cell-output-display}\n![](boxplot_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## ggplot2\n\n主要是`geom_boxplot()`函数.\n\n### 基础\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x = class, y = hwy)) +\n    geom_boxplot()\n```\n\n::: {.cell-output-display}\n![最基础的箱线图](boxplot_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x = class, y = hwy)) +\n    geom_boxplot(\n        color = \"blue\", # 箱线图边框颜色为蓝色\n        fill = \"blue\", # 箱体填充颜色为蓝色\n        alpha = 0.2, # 箱体透明度为0.2，便于观察重叠部分\n\n        notch = TRUE, # 显示缺口，用于比较中位数是否有显著差异\n        notchwidth = 0.8, # 缺口的宽度\n\n        outlier.colour = \"red\", # 异常值点的边框颜色为红色\n        outlier.fill = \"red\", # 异常值点的填充颜色为红色\n        outlier.size = 1 # 异常值点的大小为3\n    )\n```\n\n::: {.cell-output-display}\n![有细腰的箱线图](boxplot_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### 排序\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg |>\n    # fct_reorder() 函数排序\n    ggplot(aes(x = fct_reorder(class, hwy, .fun = \"median\"), y = hwy)) +\n    geom_boxplot()\n```\n\n::: {.cell-output-display}\n![用均值排序箱线图](boxplot_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### 定制外观\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(mpg, aes(x = class, y = hwy)) +\n    geom_boxplot(color = \"red\", fill = \"orange\", alpha = 0.2)\n\np2 <- ggplot(mpg, aes(x = class, y = hwy, fill = class)) +\n    geom_boxplot(alpha = 0.3) +\n    theme(legend.position = \"none\")\n\np3 <- ggplot(mpg, aes(x = class, y = hwy, fill = class)) +\n    geom_boxplot(alpha = 0.3) +\n    theme(legend.position = \"none\") +\n    scale_fill_brewer(palette = \"BuPu\") # 调色板\n\np4 <- ggplot(mpg, aes(x = class, y = hwy, fill = class)) +\n    geom_boxplot(alpha = 0.3) +\n    theme(legend.position = \"none\") +\n    scale_fill_brewer(palette = \"Dark2\") # 调色板\n\np1 + p2 + p3 + p4\n```\n\n::: {.cell-output-display}\n![改变颜色](boxplot_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg |>\n    # 添加一列 'type'，用于标记是否高亮某个组\n    mutate(type = ifelse(class == \"subcompact\", \"Highlighted\", \"Normal\")) |>\n    ggplot(aes(x = class, y = hwy, fill = type, alpha = type)) +\n    geom_boxplot() +\n    scale_fill_manual(values = c(\"#69b3a2\", \"grey\")) + # 手动设置填充色，高亮组为绿色，其余为灰色\n    scale_alpha_manual(values = c(1, 0.1)) + # 手动设置透明度，高亮组为不透明，其余为半透明\n    theme_ipsum() + # 使用 hrbrthemes 包的排版主题\n    theme(legend.position = \"none\") + # 不显示图例\n    xlab(\"\") # 去除 x 轴标签\n```\n\n::: {.cell-output-display}\n![高亮某个组](boxplot_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n### 分组/分面\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 构造数据\nvariety <- rep(LETTERS[1:7], each = 40) # 7种品种，每种40个观测\ntreatment <- rep(c(\"high\", \"low\"), each = 20) # 处理分为high和low，每组20个观测\nnote <- seq(1:280) + sample(1:150, 280, replace = TRUE) # 生成note变量，添加一定随机性\ndata2 <- data.frame(variety, treatment, note) # 组合成数据框\n\n# 分组箱线图\nggplot(data2, aes(x = variety, y = note, fill = treatment)) +\n    geom_boxplot()\n```\n\n::: {.cell-output-display}\n![分组箱线图与分面箱线图](boxplot_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 少分面箱线图\nggplot(data2, aes(x = variety, y = note, fill = treatment)) +\n    geom_boxplot() +\n    facet_wrap(~treatment)\n```\n\n::: {.cell-output-display}\n![分组箱线图与分面箱线图](boxplot_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# 多分面箱线图\nggplot(data2, aes(x = variety, y = note, fill = treatment)) +\n    geom_boxplot() +\n    facet_wrap(~variety, scale = \"free\") # 自由y轴\n```\n\n::: {.cell-output-display}\n![分组箱线图与分面箱线图](boxplot_files/figure-html/unnamed-chunk-13-3.png){width=672}\n:::\n:::\n\n\n### 不等宽\n\n让箱线图的宽度与样本量成正比\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 转换为因子类型\nmpg$drv <- as.factor(mpg$drv)\n# 创建x轴标签，包含每个drv水平的名称及其对应的样本量\nn_xlab <- str_glue(\"{levels(mpg$drv)}\\n(N={table(mpg$drv)})\")\n\nggplot(mpg, aes(x = drv, y = hwy, fill = drv)) +\n    geom_boxplot(varwidth = TRUE, alpha = 0.2) + # varwidth = TRUE 不等宽\n    scale_x_discrete(labels = n_xlab) +\n    theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![不等宽箱线图(宽带是样本量)](boxplot_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### 连续变量\n\n把连续变量分箱后再绘制箱线图。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds |>\n    mutate(bin = cut_width(carat, width = 0.5, boundary = 0)) |>\n    ggplot(aes(x = bin, y = price)) +\n    geom_boxplot()\n```\n\n::: {.cell-output-display}\n![连续变量箱线图](boxplot_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### 添加均值点\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x = drv, y = hwy, fill = drv)) +\n    geom_boxplot(alpha = 0.7) +\n    stat_summary(fun = mean, geom = \"point\", shape = 1, size = 2, color = \"red\") +\n    theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![添加均值点](boxplot_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n### 带数据点\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# data1 是之前创建的数据集\ndata1 |>\n    ggplot(aes(x = name, y = value, fill = name)) +\n    geom_boxplot() +\n    scale_fill_viridis(discrete = TRUE) + # 好看的色盲友好型颜色,离散变量\n    geom_jitter(color = \"grey\", size = 0.5, alpha = 0.5) +\n    theme_ipsum() + # 更适合排版的主题\n    theme(legend.position = \"none\") +\n    labs(x = \"\") +\n    ggtitle(\"A boxplot with jitter\")\n```\n\n::: {.cell-output-display}\n![带抖动的箱线图](boxplot_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n### 外套箱线图 {#sec-ggMarginal}\n\nggExtra包来实现更复杂（花哨）的图形，在ggplot2散点图的基础上再叠加箱线图、密度曲线等。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 创建ggplot散点图\np <- ggplot(mtcars, aes(x = wt, y = mpg, color = cyl, size = cyl)) +\n    geom_point() +\n    theme(legend.position = \"none\")\n\nggMarginal(p, type = \"histogram\")\n```\n\n::: {.cell-output-display}\n![ggMarginal散点图叠加直方图](boxplot_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggMarginal(p, type = \"density\")\n```\n\n::: {.cell-output-display}\n![ggMarginal散点图叠加密度图](boxplot_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggMarginal(p, type = \"boxplot\")\n```\n\n::: {.cell-output-display}\n![ggMarginal散点图叠加箱线图](boxplot_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n还可以定制化样式：\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 设置边际直方图的尺寸大小为10\nggMarginal(p, type = \"histogram\", size = 10)\n```\n\n::: {.cell-output-display}\n![ggMarginal定制化样式-尺寸大小](boxplot_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 设置边际直方图的填充颜色为slateblue，x轴直方图分箱数为10\nggMarginal(p, type = \"histogram\", fill = \"slateblue\", xparams = list(bins = 10))\n```\n\n::: {.cell-output-display}\n![ggMarginal定制化样式-颜色和分箱](boxplot_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 只在x轴添加边际图，边际图颜色为紫色，尺寸为4\nggMarginal(p, margins = \"x\", color = \"purple\", size = 4)\n```\n\n::: {.cell-output-display}\n![ggMarginal定制化样式-颜色和尺寸](boxplot_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n## Base R\n\n主要是通过`boxplot()`函数.\n\n但是 base R 多看一秒都是浪费时间,直接ggplot2吧.\n\n如果实在想学,可以看 [r-graph-gallery](https://r-graph-gallery.com/boxplot.html) 的文档。\n\n## Pearl {#sec-ggstatsplot}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 自动安装packages\nif (!require(ggstatsplot)) {\n    install.packages(\n        \"ggstatsplot\",\n        repos = \"https://cloud.r-project.org\"\n    )\n}\n\nif (!require(palmerpenguins)) {\n    install.packages(\n        \"palmerpenguins\",\n        repos = \"https://cloud.r-project.org\"\n    )\n}\n\npalmerpenguins::penguins |>\n    drop_na() |>\n    ggstatsplot::ggbetweenstats(x = species, y = flipper_length_mm, 1)\n```\n\n::: {.cell-output-display}\n![带有统计的小提琴箱线图](boxplot_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n在 [ggstatsplot](https://r-graph-gallery.com/web-violinplot-with-ggstatsplot.html) 可以看到进一步美化。\n\n或者\n\n在 [tidyplots](https://tidyplots.org/use-cases/) 有另一种风格的统计箱线图。\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}